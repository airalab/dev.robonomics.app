{"version":3,"file":"js/app.b0311268.js","mappings":"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","sources":["webpack://dapp-robonomics.network/./src/views/dtwin/CreateTwin.vue","webpack://dapp-robonomics.network/./src/views/dtwin/CreateTwin.vue?2dea","webpack://dapp-robonomics.network/./src/hooks/useSubscription.js","webpack://dapp-robonomics.network/./src/App.vue","webpack://dapp-robonomics.network/./src/components/Header.vue","webpack://dapp-robonomics.network/./src/utils/tools.js","webpack://dapp-robonomics.network/./src/components/Header.vue?801b","webpack://dapp-robonomics.network/./src/components/Footer.vue","webpack://dapp-robonomics.network/./src/components/Footer.vue?7cca","webpack://dapp-robonomics.network/./src/components/layouts/Main.vue","webpack://dapp-robonomics.network/./src/components/layouts/Main.vue?a356","webpack://dapp-robonomics.network/./src/App.vue?7ccd","webpack://dapp-robonomics.network/./src/plugins/ipfs.js","webpack://dapp-robonomics.network/./src/utils/encryptor.js","webpack://dapp-robonomics.network/./src/plugins/robonomicsAccountManager.js","webpack://dapp-robonomics.network/./src/plugins/robonomics.js","webpack://dapp-robonomics.network/./src/plugins/web3.js","webpack://dapp-robonomics.network/./src/views/hardware/Altruist.vue","webpack://dapp-robonomics.network/./src/views/hardware/Hikikomori.vue","webpack://dapp-robonomics.network/./src/views/hardware/Riscv.vue","webpack://dapp-robonomics.network/./src/components/web3/NftInfo.vue","webpack://dapp-robonomics.network/./src/components/web3/NftToken.vue","webpack://dapp-robonomics.network/./src/components/web3/BtnSend.vue","webpack://dapp-robonomics.network/./src/components/web3/BtnSend.vue?fc9a","webpack://dapp-robonomics.network/./src/components/web3/FreeMinimum.vue","webpack://dapp-robonomics.network/./src/components/web3/apiNftOracle.js","webpack://dapp-robonomics.network/./src/components/web3/FreeMinimum.vue?6b81","webpack://dapp-robonomics.network/./src/components/web3/NftToken.vue?6082","webpack://dapp-robonomics.network/./src/components/web3/NftInfo.vue?0a2c","webpack://dapp-robonomics.network/./src/views/hardware/Season-pass-2.vue","webpack://dapp-robonomics.network/./src/views/hardware/Season-pass-2.vue?7d65","webpack://dapp-robonomics.network/./src/eth_chains.js","webpack://dapp-robonomics.network/./src/views/hardware/Season-pass.vue","webpack://dapp-robonomics.network/./src/views/hardware/Season-pass.vue?e5cd","webpack://dapp-robonomics.network/./src/views/Home.vue","webpack://dapp-robonomics.network/./src/views/Home.vue?9051","webpack://dapp-robonomics.network/./src/views/humanoid/RobonomicsLaunch.vue","webpack://dapp-robonomics.network/./src/views/humanoid/config.js","webpack://dapp-robonomics.network/./src/views/humanoid/RobonomicsLaunch.vue?4a2b","webpack://dapp-robonomics.network/./src/views/humanoid/RobonomicsApp.vue","webpack://dapp-robonomics.network/./src/views/humanoid/RobonomicsApp.vue?7643","webpack://dapp-robonomics.network/./src/views/PathNotFound.vue","webpack://dapp-robonomics.network/./src/views/PathNotFound.vue?dbdf","webpack://dapp-robonomics.network/./src/views/RwsActivate.vue","webpack://dapp-robonomics.network/./src/hooks/useBalance.js","webpack://dapp-robonomics.network/./src/views/RwsActivate.vue?116c","webpack://dapp-robonomics.network/./src/views/RwsSetup.vue","webpack://dapp-robonomics.network/./src/views/RwsSetup.vue?d6aa","webpack://dapp-robonomics.network/./src/views/RwsSetupNew.vue","webpack://dapp-robonomics.network/./src/views/RwsSetupNew.vue?1f64","webpack://dapp-robonomics.network/./src/views/hardware/Energy-monitor.vue","webpack://dapp-robonomics.network/./src/views/hardware/Energy-monitor.vue?2905","webpack://dapp-robonomics.network/./src/views/saveSetup/Page.vue","webpack://dapp-robonomics.network/./src/views/saveSetup/Account.vue","webpack://dapp-robonomics.network/./src/views/saveSetup/Account.vue?7f78","webpack://dapp-robonomics.network/./src/views/saveSetup/Crust.vue","webpack://dapp-robonomics.network/./src/utils/crust.js","webpack://dapp-robonomics.network/./src/views/saveSetup/Crust.vue?49e2","webpack://dapp-robonomics.network/./src/views/saveSetup/DTwin.vue","webpack://dapp-robonomics.network/./src/views/saveSetup/DTwin.vue?84e3","webpack://dapp-robonomics.network/./src/views/saveSetup/DTwinSave.vue","webpack://dapp-robonomics.network/./src/views/saveSetup/DTwinSave.vue?5fcb","webpack://dapp-robonomics.network/./src/views/saveSetup/Encrypt.vue","webpack://dapp-robonomics.network/./src/views/saveSetup/Encrypt.vue?f5bc","webpack://dapp-robonomics.network/./src/views/saveSetup/IpfsFile.vue","webpack://dapp-robonomics.network/./src/views/saveSetup/IpfsFile.vue?12b7","webpack://dapp-robonomics.network/./src/views/saveSetup/IpfsUpload.vue","webpack://dapp-robonomics.network/./src/views/saveSetup/IpfsUpload.vue?9485","webpack://dapp-robonomics.network/./src/views/saveSetup/Page.vue?b747","webpack://dapp-robonomics.network/./src/views/telemetry/Telemetry.vue","webpack://dapp-robonomics.network/./src/views/telemetry/Launch.vue","webpack://dapp-robonomics.network/./src/hooks/useIpfs.js","webpack://dapp-robonomics.network/./src/utils/telemetry.js","webpack://dapp-robonomics.network/./src/views/telemetry/common.js","webpack://dapp-robonomics.network/./src/views/telemetry/launch.js","webpack://dapp-robonomics.network/./src/views/telemetry/Launch.vue?a7de","webpack://dapp-robonomics.network/./src/views/telemetry/Libp2p.vue","webpack://dapp-robonomics.network/./src/utils/libp2p/ha.js","webpack://dapp-robonomics.network/./src/utils/libp2p/libp2p.js","webpack://dapp-robonomics.network/./src/views/telemetry/libp2p.js","webpack://dapp-robonomics.network/./src/views/telemetry/Libp2p.vue?d944","webpack://dapp-robonomics.network/./src/views/telemetry/Telemetry.vue?f25e","webpack://dapp-robonomics.network/./src/router.js","webpack://dapp-robonomics.network/./src/store.js","webpack://dapp-robonomics.network/./src/utils/filters.js","webpack://dapp-robonomics.network/./src/main.js","webpack://dapp-robonomics.network/./src/hooks/useSend.js","webpack://dapp-robonomics.network/./src/hooks/useAccount.js","webpack://dapp-robonomics.network/./src/hooks/useDevices.js","webpack://dapp-robonomics.network/./src/views/dtwin/SelectTwin.vue","webpack://dapp-robonomics.network/./src/views/dtwin/SelectTwin.vue?f204","webpack://dapp-robonomics.network/./src/hooks/useRobonomics.js","webpack://dapp-robonomics.network/./src/views/dtwin/dtwin.js","webpack://dapp-robonomics.network/./src/config.js","webpack://dapp-robonomics.network/webpack/bootstrap","webpack://dapp-robonomics.network/webpack/runtime/amd options","webpack://dapp-robonomics.network/webpack/runtime/chunk loaded","webpack://dapp-robonomics.network/webpack/runtime/compat get default export","webpack://dapp-robonomics.network/webpack/runtime/create fake namespace object","webpack://dapp-robonomics.network/webpack/runtime/define property getters","webpack://dapp-robonomics.network/webpack/runtime/ensure chunk","webpack://dapp-robonomics.network/webpack/runtime/get javascript chunk filename","webpack://dapp-robonomics.network/webpack/runtime/get mini-css chunk filename","webpack://dapp-robonomics.network/webpack/runtime/global","webpack://dapp-robonomics.network/webpack/runtime/hasOwnProperty shorthand","webpack://dapp-robonomics.network/webpack/runtime/load script","webpack://dapp-robonomics.network/webpack/runtime/make namespace object","webpack://dapp-robonomics.network/webpack/runtime/node module decorator","webpack://dapp-robonomics.network/webpack/runtime/publicPath","webpack://dapp-robonomics.network/webpack/runtime/css loading","webpack://dapp-robonomics.network/webpack/runtime/jsonp chunk loading","webpack://dapp-robonomics.network/webpack/startup"],"sourcesContent":["<template>\n  <robo-button\n    @click=\"create\"\n    block\n    :disabled=\"isProccess\"\n    :loading=\"isProccess\"\n    :type=\"isSuccess ? 'ok' : 'primary'\"\n  >\n    Create new\n  </robo-button>\n</template>\n\n<script>\nimport { ref } from \"vue\";\nimport { useTwinAction } from \"./dtwin.js\";\n\nexport default {\n  props: [\"owner\"],\n  emits: [\"change\"],\n  setup(props, { emit }) {\n    const { create } = useTwinAction(props.owner);\n    const isProccess = ref(false);\n    const isSuccess = ref(false);\n\n    return {\n      isProccess,\n      isSuccess,\n      create: async () => {\n        isSuccess.value = false;\n        isProccess.value = true;\n        const tx = await create();\n        if (tx.error.value) {\n          if (tx.error.value !== \"Cancelled\") {\n            console.log(tx.error.value);\n          } else {\n            console.log(\"cancel\");\n          }\n          isProccess.value = false;\n          return false;\n        }\n        isProccess.value = false;\n        isSuccess.value = true;\n        emit(\"create\");\n      }\n    };\n  }\n};\n</script>\n","import { render } from \"./CreateTwin.vue?vue&type=template&id=1fb051d6\"\nimport script from \"./CreateTwin.vue?vue&type=script&lang=js\"\nexport * from \"./CreateTwin.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import configApp from \"@/config\";\nimport { createType, TypeRegistry } from \"@polkadot/types\";\nimport { validateAddress } from \"@polkadot/util-crypto\";\nimport { computed, ref, shallowRef, watch } from \"vue\";\nimport { useDevices } from \"./useDevices\";\nimport { useRobonomics } from \"./useRobonomics\";\n\nconst getRegistry = () => {\n  const registry = new TypeRegistry();\n  const types = {\n    PalletRobonomicsRwsSubscription: {\n      _enum: {\n        Lifetime: {\n          tps: \"Compact<u32>\"\n        },\n        Daily: {\n          days: \"Compact<u32>\"\n        }\n      }\n    },\n    PalletRobonomicsRwsSubscriptionLedger: {\n      freeWeight: \"Compact<u64>\",\n      issueTime: \"Compact<u64>\",\n      lastUpdate: \"Compact<u64>\",\n      kind: {\n        _enum: {\n          Lifetime: {\n            tps: \"Compact<u32>\"\n          },\n          Daily: {\n            days: \"Compact<u32>\"\n          }\n        }\n      }\n    }\n  };\n  registry.register(types);\n  return registry;\n};\n\nconst DAYS_TO_MS = 24 * 60 * 60 * 1000;\n\nexport const getLedger = async (robonomics, owner) => {\n  const res = await robonomics.rws.getLedger(owner);\n  if (!res.isEmpty) {\n    return res.value;\n  }\n  return null;\n};\n\nexport const getValidUntil = (ledger) => {\n  if (!ledger) {\n    return null;\n  }\n  if (ledger.kind.isLifetime) {\n    return null;\n  }\n  const issue_time = ledger.issueTime.toNumber();\n  let days = 0;\n  if (ledger.kind.isDaily) {\n    days = ledger.kind.value.days.toNumber();\n  }\n  return issue_time + days * DAYS_TO_MS;\n};\n\nexport const useSubscription = (initialOwner = null) => {\n  const owner = ref(initialOwner);\n  const dataRaw = shallowRef(null);\n\n  const { isReady, getInstance } = useRobonomics();\n  const { devices, loadDevices } = useDevices(owner);\n\n  const getReferenceCallWeight = () => {\n    return getInstance().api.consts.rws.referenceCallWeight;\n  };\n\n  const getLedger = async (owner) => {\n    const endpoint =\n      localStorage.getItem(\"rpc-parachain\") || configApp.default_rpc_endpoint;\n    const lsKey = `hasubscription:${endpoint}:${owner}`;\n\n    if (!isReady.value) {\n      const data = localStorage.getItem(lsKey);\n      if (data) {\n        try {\n          const parsedData = JSON.parse(data);\n          // if (parsedData.time + DAYS_TO_MS > Date.now()) {\n          const res = createType(\n            getRegistry(),\n            \"Option<PalletRobonomicsRwsSubscriptionLedger>\",\n            parsedData.value\n          );\n          // console.log(\"getLedger cache\");\n          return { data: res.value, cache: true };\n          // }\n        } catch (error) {\n          console.log(\"hasubscription bad\", error);\n        }\n      } else {\n        return { data: undefined, cache: true };\n      }\n    } else {\n      const res = await getInstance().rws.getLedger(owner);\n      if (!res.isEmpty) {\n        localStorage.setItem(\n          lsKey,\n          JSON.stringify({ time: Date.now(), value: res.value.toJSON() })\n        );\n        // console.log(\"getLedger chain\");\n        return { data: res.value, cache: false };\n      }\n    }\n    return { data: undefined, cache: false };\n  };\n\n  const getFreeWeightCalc = async (owner) => {\n    const ledger = (await getLedger(owner)).data;\n    if (!ledger) {\n      return -1;\n    }\n\n    const freeWeight = ledger.freeWeight.toNumber();\n    const lastUpdate = ledger.lastUpdate.toNumber();\n    const issueTime = ledger.issueTime.toNumber();\n\n    const referenceCallWeight = getReferenceCallWeight();\n    const now = Date.now();\n\n    let utps = (() => {\n      let tps;\n      if (ledger.kind.isLifetime) {\n        tps = ledger.kind.value.tps.toNumber();\n      } else {\n        const days = ledger.kind.value.days.toNumber();\n        const duration_ms = days * DAYS_TO_MS;\n        if (now < issueTime + duration_ms) {\n          tps = 10000;\n        } else {\n          tps = 0;\n        }\n      }\n      return tps;\n    })();\n\n    const delta = now - lastUpdate;\n    return Math.floor(\n      freeWeight + (referenceCallWeight * utps * delta) / 1000000000\n    );\n  };\n\n  const validUntil = computed(() => {\n    if (!dataRaw.value) {\n      return null;\n    }\n    if (dataRaw.value.kind.isLifetime) {\n      return null;\n    }\n    const issue_time = dataRaw.value.issueTime.toNumber();\n    let days = 0;\n    if (dataRaw.value.kind.isDaily) {\n      days = dataRaw.value.kind.value.days.toNumber();\n    }\n    return issue_time + days * DAYS_TO_MS;\n  });\n\n  const countMonth = computed(() => {\n    if (!dataRaw.value) {\n      return 0;\n    }\n    let days = 0;\n    if (dataRaw.value.kind.isDaily) {\n      days = dataRaw.value.kind.value.days.toNumber();\n    }\n    return days / 30;\n  });\n\n  const isActive = computed(() => {\n    if (\n      !dataRaw.value ||\n      (validUntil.value !== null && Date.now() > validUntil.value)\n    ) {\n      return false;\n    }\n    return true;\n  });\n\n  const hasSubscription = computed(() => {\n    return dataRaw.value;\n  });\n\n  const loadLedger = async () => {\n    if (owner.value) {\n      try {\n        validateAddress(owner.value);\n        const result = await getLedger(owner.value);\n        dataRaw.value = result.data;\n        if (result.cache) {\n          const stop = watch(\n            isReady,\n            async () => {\n              if (isReady.value) {\n                const result = await getLedger(owner.value);\n                dataRaw.value = result.data;\n                stop();\n              }\n            },\n            { immediate: true }\n          );\n        }\n        return;\n        // eslint-disable-next-line no-empty\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    dataRaw.value = null;\n  };\n\n  watch(\n    owner,\n    async () => {\n      await loadLedger();\n    },\n    {\n      immediate: true\n    }\n  );\n\n  return {\n    owner,\n    dataRaw,\n    hasSubscription,\n    isActive,\n    countMonth,\n    validUntil,\n    loadLedger,\n    devices,\n    loadDevices,\n    getFreeWeightCalc\n  };\n};\n","<template>\n  <main-layout :pagetitle=\"title\">\n    <router-view />\n  </main-layout>\n</template>\n\n<script>\nimport MainLayout from \"@/components/layouts/Main.vue\";\nimport { inject, ref, watch } from \"vue\";\nimport { useRoute, useRouter } from \"vue-router\";\nimport { useStore } from \"vuex\";\n\nexport default {\n  name: \"App\",\n  components: {\n    MainLayout\n  },\n  setup() {\n    const RobonomicsProvider = inject('RobonomicsProvider');\n    // const IpfsProvider = inject(\"IpfsProvider\");\n    const store = useStore();\n    const router = useRouter();\n    const route = useRoute();\n\n    const title = ref();\n\n    // store.commit(\"rws/setKey\", process.env.VUE_APP_ROBONOMICS_UI_KEY);\n    // отказываемся от этой переменной совсем\n    // store.dispatch(\"rws/init\");\n\n    store.commit(\"rws/setLink\", {\n      link: \"activate\",\n      value: router.resolve({ name: \"rwsActivate\" }).path\n    });\n\n    store.commit(\"rws/setLink\", {\n      link: \"setup\",\n      value: router.resolve({ name: \"rwsSetup\" }).path\n    });\n\n    store.commit(\"rws/setLink\", {\n      link: \"setupnew\",\n      value: router.resolve({ name: \"rwsSetupNew\" }).path\n    });\n\n    store.commit(\"rws/setLink\", {\n      link: \"devices\",\n      value: router.resolve({ name: \"telemetry\" }).path\n    });\n    \n    watch(route, () => {\n      title.value = route?.meta?.title;\n      const resulttitle = title.value\n        ? `${title.value} / Robonomics Dapp`\n        : \"Robonomics Dapp\";\n      document.title = resulttitle;\n      if(document\n      .querySelector('meta[property=\"og:title\"]'))\n      document\n        .querySelector('meta[property=\"og:title\"]')\n        .setAttribute(\"content\", resulttitle);\n    });\n\n    watch(\n      [route, RobonomicsProvider.isReady],\n      ([route, isReady]) => {\n        if (route.name !== \"telemetry\" && isReady) {\n          store.commit(\"polkadot/setConnectionType\", \"parachain\");\n          store.commit(\"polkadot/setConnectionConnected\", true);\n        }\n      },\n      { immediate: true }\n    );\n\n    return {\n      title\n    };\n  }\n};\n</script>\n","<template>\n  <robo-layout-header\n    logoIcon=\"images/icon_white.svg\"\n    :title=\"title\"\n    v-if=\"renderComponent\"\n  >\n\n  <template #nav>\n\n    <robo-section>\n      <nav class=\"nav-rws\">\n        <ul>\n          <li><router-link :to=\"$store.state.robonomicsUIvue.rws.links.activate\" exact>Buy/renew a subscription</router-link></li>\n          <li><router-link :to=\"$store.state.robonomicsUIvue.rws.links.setupnew\" exact>New setup</router-link></li>\n          <li>\n            <router-link :to=\"$store.state.robonomicsUIvue.rws.links.setup\" exact>Your setup<template v-if=\"$store.state.robonomicsUIvue.rws.list.length > 1\">s</template></router-link>\n          </li>\n          <li>\n            <router-link :to=\"$store.state.robonomicsUIvue.rws.links.devices\" exact>Devices & Control</router-link>\n          </li>\n        </ul>\n      </nav>\n    </robo-section>\n\n    <!-- <robo-section>\n      <nav class=\"nav-devices\">\n        <ul>\n          <li>\n            <router-link to=\"/hardware/altruist\" exact>\n              <img src=\"images/hardware/altruist.webp\" />\n              <span>Air Quality Sensor “ALTRUIST“</span>\n            </router-link>\n          </li>\n          <li>\n            <router-link to=\"/hardware/riscv\" exact>\n              <img src=\"images/hardware/risc-v.webp\" />\n              <span>Home server with Web3 cloud</span>\n            </router-link>\n          </li>\n          <li>\n            <router-link to=\"/hardware/hikikomori\" exact>\n              <img src=\"images/hardware/hikikomori.webp\" />\n              <span>Smart Tamagotchi “Hikikomori“</span>\n            </router-link>\n          </li>\n          <li>\n            <router-link to=\"/hardware/energy-monitor\" exact>\n              <img src=\"images/hardware/e-monitor.webp\" />\n              <span>Energy monitor with USB-C</span>\n            </router-link>\n          </li>\n        </ul>\n      </nav>\n    </robo-section> -->\n\n  </template>\n  </robo-layout-header>\n</template>\n\n<script>\nimport { fromUnit, round } from \"@/utils/tools\";\nimport { toRaw } from \"vue\";\n\nexport default {\n  props: {\n    title: {\n      type: String,\n      default: \"Robonomics Dapp\"\n    }\n  },\n  inject: [\"RobonomicsProvider\"],\n  data() {\n    return {\n      renderComponent: true,\n    };\n  },\n  computed: {\n    robonomics: function () {\n      return toRaw(this.RobonomicsProvider.instance.value);\n    }\n  },\n  watch: {\n    \"$store.state.robonomicsUIvue.polkadot.extensionObj\": function (value) {\n      if (\n        value.signer &&\n        value.signer.signRaw &&\n        this.$store.state.robonomicsUIvue.polkadot.address\n      ) {\n        this.handlerAccount(this.$store.state.robonomicsUIvue.polkadot.address);\n      }\n    },\n    \"$store.state.robonomicsUIvue.polkadot.address\": {\n      handler: function (value) {\n        if (\n          value &&\n          this.$store.state.robonomicsUIvue.polkadot.extensionObj.signer &&\n          this.$store.state.robonomicsUIvue.polkadot.extensionObj.signer.signRaw\n        ) {\n          this.handlerAccount(value);\n        }\n      },\n      immediate: true\n    },\n    \"RobonomicsProvider.isReady.value\": {\n      handler: function (newValue, oldValue) {\n        if (newValue && !oldValue) {\n          this.handlerAccount(\n            this.$store.state.robonomicsUIvue.polkadot.address\n          );\n        }\n      },\n      immediate: true\n    },\n    $route: async function () {\n      this.renderComponent = false;\n      await this.$nextTick();\n      this.renderComponent = true;\n    }\n  },\n  methods: {\n    async handlerAccount(address) {\n      try{\n\n        if (!this.RobonomicsProvider.isReady.value) {\n          return;\n        }\n        if (this.unsubscribeBalance) {\n          this.unsubscribeBalance();\n        }\n        if (!this.$store.state.robonomicsUIvue.polkadot.accounts) {\n          return;\n        }\n        const account = this.$store.state.robonomicsUIvue.polkadot.accounts.find(\n          (item) => item.address === address\n        );\n        if (!account) {\n          return;\n        }\n        if (this.$route.name !== \"telemetry\") {\n          await this.robonomics.accountManager.setSender(address, {\n            type: account.type,\n            extension: this.$store.state.robonomicsUIvue.polkadot.extensionObj\n          });\n        }\n        this.unsubscribeBalance = await this.robonomics.account.getBalance(\n          address,\n          (r) => {\n            const transferable = r.free.sub(r.frozen);\n            this.$store.commit(\n              \"polkadot/setBalanceXRT\",\n              round(\n                fromUnit(\n                  transferable,\n                  this.robonomics.api.registry.chainDecimals[0]\n                ),\n                4\n              )\n            );\n          }\n        );\n      } catch (e) { console.error(e); }\n    }\n  }\n};\n</script>\n\n<style scoped>\n  .nav-rws ul {\n    text-align: left;\n    grid-template-columns: repeat(4, 1fr);\n  }\n\n  .nav-rws a {\n    display: block;\n    margin-bottom: 0.5rem;\n    font-weight: bold;\n    white-space: nowrap;\n    text-transform: uppercase;\n  }\n\n  .nav-devices {\n    margin-top: calc(var(--robo-space) * 2);\n  }\n\n  .nav-devices li {\n    padding: var(--robo-space) 0;\n    border-top: 1px solid var(--robo-color-dark);\n  }\n\n  .nav-devices a {\n    display: grid;\n    grid-template-columns: 100px auto;\n    align-items: center;\n    gap: var(--robo-space);\n    font-weight: bold;\n    text-transform: uppercase;\n  }\n\n  .nav-devices img {\n    max-width: 100%;\n    object-fit: contain;\n  }\n\n  .nav-devices li:not(:nth-child(2)) img {\n    max-height: 92px;\n  }\n\n  .nav-devices li:nth-child(2) img {\n    min-height: 100px;\n  }\n\n\n  @media screen and (width < 950px) {\n    .nav-rws ul {\n      grid-template-columns: repeat(2, 1fr);\n    }\n  }\n\n  @media screen and (width < 560px) {\n    .nav-devices a {\n      grid-template-columns: 50px auto;\n    }\n  }\n</style>\n","import Decimal from \"decimal.js-light\";\n\nDecimal.set({\n  toExpNeg: -31,\n  toExpPos: 31\n});\n\nexport function toDecimal(v) {\n  return new Decimal(v.toString());\n}\n\nexport function round(v, place) {\n  return toDecimal(v).todp(place);\n}\n\nexport function fromUnit(v, decimals = 0, dp) {\n  return toDecimal(v)\n    .div(new Decimal(10).pow(decimals.toString()))\n    .todp(dp)\n    .toString();\n}\n\nexport function toUnit(v, decimals = 0) {\n  return toDecimal(v).mul(new Decimal(10).pow(decimals.toString())).toString();\n}\n\nexport function showVersion() {\n  console.log(\n    \"Build version:\",\n    process.env.VUE_APP_GIT_BRANCH,\n    process.env.VUE_APP_GIT_TAG,\n    process.env.VUE_APP_GIT_SHA\n  );\n}\n","import { render } from \"./Header.vue?vue&type=template&id=d48ff4f2&scoped=true\"\nimport script from \"./Header.vue?vue&type=script&lang=js\"\nexport * from \"./Header.vue?vue&type=script&lang=js\"\n\nimport \"./Header.vue?vue&type=style&index=0&id=d48ff4f2&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-d48ff4f2\"]])\n\nexport default __exports__","<template>\n    <footer>\n        <div class=\"footer-section\">\n            <nav>\n                <ul v-for=\"item in navigation\" :key=\"item.title\" :data-label=\"item.title\">\n                    <li v-for=\"link in item.links\" :key=\"link.title\">\n                        <a :href=\"link.link\" target=\"_blank\">{{link.title}}</a>\n                    </li>\n                </ul>\n            </nav>\n            <robo-text size=\"small\" weight=\"bold\" align=\"center\">\n                <robo-grid id=\"footer-label\" type=\"flex\" gap=\"x05\" valign=\"center\">\n                    <span>Secured by</span>\n                    <img width=\"100\" alt=\"Polkadot\" src=\"/images/polkadot-new-dot-logo-horizontal.svg\" />\n                </robo-grid>\n            </robo-text>\n        </div>\n        <robo-text v-if=\"repoversion\" size=\"small\" weight=\"bold\" align=\"center\" class=\"footer-section\">\n            Latest release:\n            <a :href=\"repoversion.html_url\" target=\"_blank\">{{ repoversion.name.includes(repoversion.tag_name) ? '' : repoversion.tag_name  }} {{ repoversion.name }}</a>\n        </robo-text>\n    </footer>\n</template>\n\n<script setup>\n\nimport { ref, onMounted, computed } from \"vue\";\nimport { useStore } from \"vuex\";\nconst store = useStore();\n\nconst network = computed(() => {\n    return store.state.robonomicsUIvue?.polkadot?.connection?.network || \"polkadot\";\n});\n\nconst navigation = [\n{\n    title: \"Services\",\n    links: [\n    {\n        title: \"Sensors map\",\n        link: \"https://sensors.social\",\n    }\n    ]\n},\n\n{\n    title: \"Tokenomics\",\n    links: [\n    {\n        title: \"About XRT\",\n        link: \"https://robonomics.network/xrt/\",\n    },\n    {\n        title: \"Uniswap\",\n        link: \"https://app.uniswap.org/#/swap?inputCurrency=0x7de91b204c1c737bcee6f000aaa6569cf7061cb7&outputCurrency=0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\",\n    },\n    {\n        title: \"Basilisk\",\n        link: \"https://app.basilisk.cloud/pools-and-farms\",\n    }\n    ]\n},\n\n{\n    title: \"Tools\",\n    links: [\n    {\n        title: \"Substrate Portal\",\n        link: \"https://polkadot.js.org/apps/?rpc=wss%3A%2F%2F\" + network.value + \".rpc.robonomics.network%2F#/explorer\",\n    },\n    {\n        title: \"Subscan\",\n        link: \"https://robonomics.subscan.io/\",\n    },\n    {\n        title: \"Polkassembly\",\n        link: \"https://robonomics.polkassembly.io/\",\n    }\n    ]\n},\n\n{\n    title: \"Help\",\n    links: [\n    {\n        title: \"GitHub\",\n        link: \"https://github.com/airalab/robonomics.app\",\n    },\n    {\n        title: \"Wiki\",\n        link: \"https://wiki.robonomics.network/\",\n    },\n    {\n        title: \"Academy\",\n        link: \"https://robonomics.academy/\",\n    },\n    {\n        title: \"Contacts\",\n        link: \"https://robonomics.network/contact/\",\n    },\n    {\n        title: \"Issues\",\n        link: \"https://github.com/airalab/robonomics.app/issues\",\n    },\n    ]\n}\n];\n\nconst repoversion = ref(null);\n\nonMounted(async () => {\n    try {\n      const response = await fetch('https://api.github.com/repos/airalab/robonomics.app/releases/latest');\n      const data = await response.json();\n      repoversion.value = data;\n    } catch (error) {\n      repoversion.value = 'Ошибка загрузки';\n      console.error('Ошибка получения версии:', error);\n    }\n});\n\n</script>\n\n<style scoped>\n    .footer-section {\n        border-top: 1px dotted var(--robo-color-text);\n        padding-top: var(--robo-layout-padding);\n        margin-top: var(--robo-layout-padding);\n    }\n    \n    footer {\n        margin-top: calc(var(--robo-space) * 5);\n        padding: var(--robo-layout-padding);\n    }\n\n    footer nav {\n        display: flex;\n        gap: calc(var(--robo-layout-padding) * 2);\n        justify-content: center;\n    }\n\n    footer nav ul:before {\n        content: attr(data-label);\n        display: block;\n        font-weight: bold;\n        margin-bottom: var(--robo-space);\n    }\n\n    @media screen and (width < 700px) {\n        footer nav {\n            font-size: 80%;\n            gap: var(--robo-layout-padding);\n        }\n    }\n\n    @media screen and (width < 500px) {\n        footer nav {\n            flex-direction: column;\n        }\n    }\n\n    #footer-label {\n        display: inline-flex;\n        width: fit-content;\n        padding-top: var(--robo-space);\n        padding-bottom: var(--robo-space);\n    }\n</style>","import script from \"./Footer.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Footer.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Footer.vue?vue&type=style&index=0&id=30cd79cc&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-30cd79cc\"]])\n\nexport default __exports__","<template>\n  <robo-layout>\n    <dapp-header :title=\"props.pagetitle\" />\n    <slot />\n    <dapp-footer />\n  </robo-layout>\n</template>\n\n<script setup>\n\nimport DappHeader from '@/components/Header';\nimport DappFooter from '@/components/Footer';\nimport { useSubscription } from \"@/hooks/useSubscription\";\nimport { defineProps, watch } from 'vue';\nimport { useStore } from \"vuex\";\n\nconst props = defineProps({\n  pagetitle: {\n    type: String\n  }\n});\n\nconst store = useStore();\nconst subscription = useSubscription();\n\n watch(\n  () => store.state.robonomicsUIvue.rws.active,\n  (v) => {\n    subscription.owner.value = v;\n  },\n  { immediate: true }\n);\n\nwatch(\n  [subscription.owner, subscription.validUntil],\n  () => {\n    store.commit(\"rws/setExpiredate\", subscription.validUntil);\n  },\n  { immediate: true }\n);\n\nwatch(\n  subscription.devices,\n  (devices) => {\n    store.commit(\"rws/setUsers\", devices);\n  },\n  { immediate: true }\n);\n</script>\n","import script from \"./Main.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Main.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=b52aa2fc\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { create } from \"ipfs-http-client\";\nimport { ref } from \"vue\";\n\nexport class IpfsApiClient {\n  constructor(endpoint) {\n    this.endpoint = endpoint;\n    this.authHeader = null;\n    this.robonomics = null;\n    this._create();\n  }\n  _create() {\n    this.client = create({\n      ...this._options()\n    });\n  }\n  _options() {\n    const options = {\n      url: this.endpoint,\n      headers: {}\n    };\n    if (this.authHeader) {\n      options.headers.authorization = `Basic ${this.authHeader}`;\n    }\n    if (this.robonomics) {\n      options.headers.robonomics = this.robonomics;\n    }\n    return options;\n  }\n  isAuth() {\n    return !!this.authHeader && !!this.robonomics;\n  }\n  auth(owner, address, signature) {\n    const authHeaderRaw = `sub-${address}:${signature}`;\n    this.authHeader = Buffer.from(authHeaderRaw).toString(\"base64\");\n    this.robonomics = owner;\n    this._create();\n  }\n  authClear() {\n    this.authHeader = null;\n    this.robonomics = null;\n    this._create();\n  }\n  async ls(cid) {\n    const files = [];\n    for await (const file of this.client.ls(cid)) {\n      if (file.type === \"file\") {\n        files.push(file);\n      }\n    }\n    return files;\n  }\n  async cat(cid) {\n    const cat = async (cid) => {\n      const decoder = new TextDecoder();\n      let content = \"\";\n      for await (const chunk of this.client.cat(cid)) {\n        content += decoder.decode(chunk, {\n          stream: true\n        });\n      }\n      return content;\n    };\n    return await cat(cid);\n  }\n  async add(data) {\n    return await this.client.add(data);\n  }\n}\n\nexport default {\n  install: (app, params) => {\n    const instance = ref();\n    app.provide(\"IpfsProvider\", {\n      instance\n    });\n    instance.value = new IpfsApiClient(params.api.gateway);\n  }\n};\n","import { u8aConcat, u8aToU8a } from \"@polkadot/util\";\nimport {\n  ed25519PairFromSeed,\n  encodeAddress,\n  mnemonicToMiniSecret,\n  randomAsU8a\n} from \"@polkadot/util-crypto\";\nimport ed2curve from \"ed2curve\";\nimport nacl from \"tweetnacl\";\n\nfunction naclOpen(sealed, nonce, senderBoxPublic, receiverBoxSecret) {\n  return (\n    nacl.box.open(sealed, nonce, senderBoxPublic, receiverBoxSecret) || null\n  );\n}\nfunction naclSeal(\n  message,\n  senderBoxSecret,\n  receiverBoxPublic,\n  nonce = randomAsU8a(24)\n) {\n  return {\n    nonce,\n    sealed: nacl.box(message, nonce, receiverBoxPublic, senderBoxSecret)\n  };\n}\nfunction convertSecretKeyToCurve25519(secretKey) {\n  return ed2curve.convertSecretKey(secretKey);\n}\nfunction convertPublicKeyToCurve25519(publicKey) {\n  return ed2curve.convertPublicKey(publicKey);\n}\nexport function decryptMessage(\n  encryptedMessageWithNonce,\n  senderPublicKey,\n  secretKey\n) {\n  const messageU8a = u8aToU8a(encryptedMessageWithNonce);\n  return naclOpen(\n    messageU8a.slice(24, messageU8a.length),\n    messageU8a.slice(0, 24),\n    convertPublicKeyToCurve25519(u8aToU8a(senderPublicKey)),\n    convertSecretKeyToCurve25519(secretKey)\n  );\n}\nexport function encryptMessage(\n  message,\n  recipientPublicKey,\n  secretKey,\n  nonceIn\n) {\n  const { nonce, sealed } = naclSeal(\n    u8aToU8a(message),\n    convertSecretKeyToCurve25519(secretKey),\n    convertPublicKeyToCurve25519(u8aToU8a(recipientPublicKey)),\n    nonceIn\n  );\n  return u8aConcat(nonce, sealed);\n}\nexport function createPair(mnemonic) {\n  const seed = mnemonicToMiniSecret(mnemonic);\n  const pair = ed25519PairFromSeed(seed);\n  return pair;\n}\nexport function encryptor(pair) {\n  return {\n    pair,\n    address: encodeAddress(pair.publicKey, 32),\n    encodeAddress: (ss58Format = 32) => {\n      return encodeAddress(pair.publicKey, ss58Format);\n    },\n    decryptMessage: (encryptedMessageWithNonce, senderPublicKey) => {\n      return decryptMessage(\n        encryptedMessageWithNonce,\n        senderPublicKey,\n        pair.secretKey\n      );\n    },\n    encryptMessage: (message, recipientPublicKey, nonce) => {\n      return encryptMessage(message, recipientPublicKey, pair.secretKey, nonce);\n    }\n  };\n}\n// export function encryptor(mnemonic) {\n//   const pair = createPair(mnemonic);\n//   return {\n//     pair,\n//     address: encodeAddress(pair.publicKey, 32),\n//     encodeAddress: (ss58Format = 32) => {\n//       return encodeAddress(pair.publicKey, ss58Format);\n//     },\n//     decryptMessage: (encryptedMessageWithNonce, senderPublicKey) => {\n//       return decryptMessage(\n//         encryptedMessageWithNonce,\n//         senderPublicKey,\n//         pair.secretKey\n//       );\n//     },\n//     encryptMessage: (message, recipientPublicKey, nonce) => {\n//       return encryptMessage(message, recipientPublicKey, pair.secretKey, nonce);\n//     }\n//   };\n// }\n","import { encryptor } from \"@/utils/encryptor\";\nimport { decodePair } from \"@polkadot/keyring/pair/decode\";\nimport { u8aToHex, u8aWrapBytes } from \"@polkadot/util\";\nimport { base64Decode } from \"@polkadot/util-crypto\";\nimport { AccountManager } from \"robonomics-interface\";\n\nexport default class AccountManagerDapp extends AccountManager {\n\n  // проверка не вызывался ли уже keyring.loadAll\n  static async create(\n    keyring,\n    config = { ss58Format: 32, type: \"ed25519\" },\n    api = null\n  ) {\n    if (typeof keyring.isReady !== 'function' || !keyring.isReady()) {\n      await keyring.loadAll(config);\n    }\n    const instance = new AccountManagerDapp(keyring, api);\n    instance.setReady(true);\n    return instance;\n  }\n\n  // старая версия конструктора\n  // constructor(keyring, config = {}, api = null) {\n  //   super(keyring, api);\n  //   this.extension = null;\n  //   keyring.loadAll(config);\n  //   this.setReady(true);\n  // }\n\n  constructor(keyring, api = null) {\n    super(keyring, api);\n    this.extension = null;\n    /* keyring.loadAll() вызывается в фабрике create(), потому что важно проверить не инициирован ли уже keyring.loadAll */\n  }\n\n  async beforeSetSender(address, { type, extension }) {\n    // if (this.account && !this.account.meta.isInjected) {\n    //   // this.keyring.forgetAccount(this.account.address);\n    //   this.account.lock();\n    // }\n    this.extension = extension;\n    try {\n      this.keyring.getPair(address);\n      // eslint-disable-next-line no-empty\n    } catch (_) {\n      this.keyring.loadInjected(address, {}, type);\n    }\n  }\n\n  async afterSetSender() {\n    await super.afterSetSender();\n    if (this.account.meta.isInjected && this.extension) {\n      this.api.setSigner(this.extension.signer);\n      this.account.signMsg = async (data) => {\n        return (\n          await this.extension.signer.signRaw({\n            address: this.account.address,\n            data: u8aToHex(u8aWrapBytes(data)),\n            type: \"bytes\"\n          })\n        ).signature;\n      };\n    }\n  }\n\n  async addUri(suri, meta = {}, type = \"ed25519\") {\n    const pair = this.keyring.keyring.addFromUri(suri, meta, type);\n    return await this.setSender(pair.address, {\n      type: type\n    });\n  }\n\n  async addUriPassword(\n    suri,\n    password = undefined,\n    meta = {},\n    type = \"ed25519\"\n  ) {\n    const { pair } = this.keyring.addUri(suri, password, meta, type);\n    return await this.setSender(pair.address, {\n      type: type\n    });\n  }\n\n  async addJsonPassword(json, password) {\n    const pair = this.keyring.createFromJson(json);\n    this.keyring.addPair(pair, password);\n    return await this.setSender(pair.address, {\n      type: pair.type\n    });\n  }\n\n  async addPair(pairKey) {\n    const pair = this.keyring.keyring.addFromPair(pairKey);\n    return await this.setSender(pair.address, {\n      type: pair.type\n    });\n  }\n\n  encryptor(password = null) {\n    if (!this.account.meta.isInjected && this.account.type === \"ed25519\") {\n      const json = this.account.toJson(password);\n      const decoded = decodePair(\n        password,\n        base64Decode(json.encoded),\n        json.encoding.type\n      );\n      return encryptor(decoded);\n    }\n  }\n}\n","import configApp from \"@/config\";\nimport keyring from \"@polkadot/ui-keyring\";\nimport { Robonomics } from \"robonomics-interface\";\nimport { ref, shallowRef } from \"vue\";\nimport AccountManager from \"./robonomicsAccountManager\";\n\nexport default {\n  install: async (app, params = {}) => {\n    const isReady = ref(false);\n    const instance = shallowRef();\n    const accountManager = new AccountManager(keyring);\n    app.provide(\"RobonomicsProvider\", {\n      isReady,\n      instance,\n      accountManager\n    });\n\n    const urlParams = new URLSearchParams(window.location.search);\n    let endpoint = urlParams.get(\"rpc\");\n\n    if (!endpoint) {\n      endpoint =\n        localStorage.getItem(\"rpc-parachain\") || configApp.default_rpc_endpoint;\n    }\n    localStorage.setItem(\"rpc-parachain\", endpoint);\n    const config = {\n      // endpoint: \"ws://127.0.0.1:9944\"\n      // endpoint: \"wss://kusama.rpc.robonomics.network/\"\n      endpoint\n    };\n\n    instance.value = await Robonomics.createInstance({ ...config, ...params });\n    instance.value.setAccountManager(accountManager);\n    isReady.value = true;\n  }\n};\n","import { ethers } from \"ethers\";\nimport { reactive } from \"vue\";\n\nconst CodeError = {\n  PROVIDER: 4,\n  NETWORK: 1,\n  ACCOUNT: 2\n};\n\nclass Web3Error extends Error {\n  constructor(code = null, ...params) {\n    super(...params);\n    this.code = code;\n  }\n}\n\nclass Connector {\n  async activate() {}\n  async getProvider() {}\n  async getAccount() {}\n  async getNetworkId() {}\n}\n\nclass Extension extends Connector {\n  constructor(provider, update) {\n    super();\n    this.provider = provider;\n    this.name = \"extension\";\n    this.account = null;\n    this.networkId = null;\n    this.emit = update;\n  }\n  handleChainChanged(networkId) {\n    this.networkId = Number(networkId);\n    this.emit(\"chainChanged\", { networkId: this.networkId });\n  }\n  async getProvider() {\n    this.provider.on(\"accountsChanged\", (accounts) => {\n      this.handleAccountsChanged(accounts);\n    });\n    this.provider.on(\"chainChanged\", (networkId) => {\n      this.handleChainChanged(networkId);\n    });\n    return this.provider;\n  }\n  async getNetworkId() {\n    this.networkId = Number(\n      await this.provider.request({ method: \"eth_chainId\" })\n    );\n    return this.networkId;\n  }\n  handleAccountsChanged(accounts) {\n    if (accounts.length > 0) {\n      this.account = accounts[0];\n    } else {\n      this.account = null;\n    }\n    this.emit(\"accountsChanged\", { account: this.account });\n  }\n}\n\nclass Provider {\n  constructor({ networks = [] } = {}) {\n    this.provider = null;\n    this.connector = null;\n    this.signer = null;\n    this.networks = networks;\n\n    this.state = reactive({\n      isReady: false,\n      error: null,\n      account: null,\n      networkId: null,\n      block: null\n    });\n  }\n  async setConnector(connector) {\n    if (connector.name === \"extension\") {\n      this.provider = new ethers.BrowserProvider(await connector.getProvider());\n    } else {\n      this.provider = new ethers.WebSocketProvider(\n        await connector.getProvider()\n      );\n    }\n    this.connector = connector;\n    this.setSigner();\n  }\n  async setSigner() {\n    if (this.connector && this.connector.name === \"extension\") {\n      try {\n        this.signer = await this.provider.getSigner();\n        this.state.account = this.signer.address;\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }\n  on(name, data) {\n    // if (name === \"accountsChanged\") {\n    //   this.state.account = data.account;\n    // }\n    if (name === \"chainChanged\") {\n      this.state.networkId = data.networkId;\n    }\n    if (!this.networks.includes(this.state.networkId)) {\n      this.state.error = new Web3Error(\n        CodeError.NETWORK,\n        `sssPlease, switch to network id ${this.networks}`\n      );\n    } else {\n      this.state.error = null;\n    }\n  }\n  async setProvider(provider) {\n    try {\n      await this.setConnector(\n        new Extension(provider, (name, data) => this.on(name, data))\n      );\n    } catch (error) {\n      console.warn(error.message);\n    }\n    try {\n      if (this.connector) {\n        this.state.networkId = await this.connector.getNetworkId();\n        if (!this.networks.includes(this.state.networkId)) {\n          this.state.error = new Web3Error(\n            CodeError.NETWORK,\n            `Please, switch to network id ${this.networks}`\n          );\n        }\n      }\n    } catch (error) {\n      this.state.error = error;\n    }\n\n    if (this.provider && this.state.error === null) {\n      this.state.isReady = true;\n      this.provider.on(\"block\", async (blockNumber) => {\n        this.state.block = await this.provider.getBlock(blockNumber);\n      });\n      this.state.block = await this.provider.getBlock(\"latest\");\n    }\n  }\n}\n\nexport const $web3 = new Provider({ networks: [11155111] });\n\nexport default {\n  install: async (app) => {\n    app.provide(\"EthereumProvider\", {\n      web3: $web3\n    });\n  }\n};\n","import script from \"./Altruist.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Altruist.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./Hikikomori.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Hikikomori.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./Riscv.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Riscv.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div>\n    <div>balance: {{ balance }} NFT</div>\n    <nft-token\n      v-for=\"token in tokens\"\n      :key=\"token.tokenId\"\n      :token=\"token\"\n      @activate=\"loadTokens\"\n      class=\"card\"\n    />\n  </div>\n</template>\n\n<script>\nimport { address } from \"@/config\";\nimport { $web3 } from \"@/plugins/web3\";\nimport axios from \"axios\";\nimport { ethers } from \"ethers\";\nimport { ref, watch } from \"vue\";\nimport nft_abi from \"./abi/NFT.json\";\nimport NftToken from \"./NftToken.vue\";\n\nexport default {\n  components: { NftToken },\n  setup() {\n    const balance = ref(null);\n    const tokens = ref([]);\n\n    // NFT\n    const nftContract = new ethers.Contract(\n      address.nft,\n      nft_abi,\n      $web3.provider\n    );\n\n    (async () => {\n      try {\n        console.log('$web3.state.account', $web3.state.account)\n        balance.value = await nftContract.balanceOf($web3.state.account);\n      } catch (error) {\n        console.log(error);\n      }\n    })();\n\n    watch(\n      () => $web3.state.block,\n      async () => {\n        try {\n          console.log('$web3.state.account', $web3.state.account)\n          balance.value = await nftContract.balanceOf($web3.state.account);\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    );\n\n    const loadTokens = async () => {\n      if (!balance.value) {\n        return;\n      }\n      const ids = [];\n      for (let index = 0; index < balance.value; index++) {\n        try {\n          const tokenId = await nftContract.tokenOfOwnerByIndex(\n            $web3.state.account,\n            index\n          );\n          const uri = await nftContract.tokenURI(tokenId);\n          const ipfsHash = uri.split(\"ipfs://\").pop();\n\n          const res = await axios.get(`https://ipfs.io/ipfs/${ipfsHash}`);\n\n          ids.push({\n            activated: await nftContract.activatedOf(tokenId),\n            tokenId: tokenId.toString(),\n            name: `${res.data.name} #${tokenId.toString()}`,\n            image: res.data.image.split(\"ipfs://\").pop()\n          });\n        } catch (error) {\n          console.log(error);\n        }\n        ``;\n      }\n      tokens.value = ids;\n    };\n\n    watch(balance, loadTokens);\n\n    return {\n      balance,\n      tokens,\n      loadTokens\n    };\n  }\n};\n</script>\n","<template>\n  <div>\n    {{ token.name }}<br />\n    <img :src=\"`https://ipfs.io/ipfs/${token.image}`\" style=\"width: 200px\" />\n    <br />\n    <btn-send\n      v-if=\"!token.activated\"\n      @click=\"(wait) => activate(wait, token.tokenId)\"\n    >\n      Activate\n    </btn-send>\n    <span v-else>activated</span>\n\n    <free-minimum :token=\"token.tokenId\" />\n  </div>\n</template>\n\n<script>\nimport { address } from \"@/config\";\nimport { $web3 } from \"@/plugins/web3\";\nimport { ethers } from \"ethers\";\nimport nft_abi from \"./abi/NFT.json\";\nimport BtnSend from \"./BtnSend.vue\";\nimport FreeMinimum from \"./FreeMinimum.vue\";\n\nexport default {\n  props: [\"token\"],\n  emits: [\"activate\"],\n  components: { BtnSend, FreeMinimum },\n  setup(_, { emit }) {\n    const activate = async (wait, tokenId) => {\n      const nftContract = new ethers.Contract(\n        address.nft,\n        nft_abi,\n        $web3.provider\n      );\n\n      try {\n        const tx = await nftContract.connect($web3.signer).activate(tokenId);\n        await wait(tx);\n        emit(\"activate\", tokenId);\n      } catch (error) {\n        if (error.code === \"CALL_EXCEPTION\" && error.data) {\n          await wait(null, nftContract.interface.parseError(error.data).name);\n        } else {\n          await wait(null, error);\n        }\n      }\n    };\n\n    return {\n      activate\n    };\n  }\n};\n</script>\n","<template>\n  <button\n    @click=\"send\"\n    :disabled=\"status === STATUS.PRE_PROCESS || status === STATUS.WAIT_TX\"\n  >\n    <slot />\n  </button>\n  <div v-if=\"status === STATUS.ERROR\" class=\"error\">{{ error }}</div>\n  <div v-if=\"status === STATUS.READY\" class=\"success\">✓</div>\n</template>\n\n<script>\nimport { ref } from \"vue\";\n\nconst STATUS = {\n  NEW: 1,\n  PRE_PROCESS: 2,\n  WAIT_TX: 3,\n  READY: 4,\n  ERROR: 5\n};\n\nexport default {\n  emits: [\"click\"],\n  setup(_, { emit }) {\n    const status = ref(STATUS.NEW);\n    const error = ref(null);\n\n    const send = async () => {\n      status.value = STATUS.PRE_PROCESS;\n      error.value = null;\n      emit(\"click\", async (tx, e, last = true) => {\n        status.value = STATUS.WAIT_TX;\n        try {\n          if (tx) {\n            const receipt = await tx.wait();\n            console.log(receipt.hash);\n            if (last) {\n              status.value = STATUS.READY;\n            }\n          } else if (e) {\n            if (e.code !== \"ACTION_REJECTED\") {\n              status.value = STATUS.ERROR;\n              error.value = e.code || e;\n            } else {\n              status.value = STATUS.NEW;\n            }\n          }\n        } catch (errorCatch) {\n          status.value = STATUS.ERROR;\n          error.value = errorCatch.message;\n        }\n      });\n    };\n\n    return {\n      STATUS,\n      status,\n      error,\n      send\n    };\n  }\n};\n</script>\n","import { render } from \"./BtnSend.vue?vue&type=template&id=5d3bb413\"\nimport script from \"./BtnSend.vue?vue&type=script&lang=js\"\nexport * from \"./BtnSend.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div>\n    <div v-if=\"received\">free minimum received</div>\n    <div v-else>\n      <div v-if=\"address\">\n        {{ address }}\n        <button\n          @click=\"requestFreeMinimum\"\n          :disabled=\"!avaible || (status !== 1 && status !== 4)\"\n        >\n          Get free minimum\n        </button>\n        <div v-if=\"status === 3\">request sent</div>\n        {{ error }}\n      </div>\n      <div v-else>Not found parachain account</div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { $web3 } from \"@/plugins/web3\";\nimport { computed, ref, watch } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { checkAvailible, getFreeMinimum } from \"./apiNftOracle\";\n\nexport default {\n  props: [\"token\"],\n  setup(props) {\n    const account = ref();\n\n    const store = useStore();\n\n    watch(\n      () => store.state.robonomicsUIvue.polkadot.address,\n      (address) => {\n        try {\n          account.value = store.state.robonomicsUIvue.polkadot.accounts.find(\n            (item) => item.address === address\n          );\n        } catch (e) { console.error(e); }\n      },\n      { immediate: true }\n    );\n\n    const address = computed(() => account.value?.address);\n\n    const error = ref();\n\n    const avaible = ref(false);\n    const check = async () => {\n      const r = await checkAvailible(props.token, $web3.state.account);\n      avaible.value = r[0];\n      error.value = r[1];\n    };\n    check();\n    const timerId = setInterval(check, 10000);\n\n    const received = computed(() => {\n      if (\n        !avaible.value &&\n        error.value === \"Free minimum for this token has already been received\"\n      ) {\n        return true;\n      }\n      return false;\n    });\n    watch(\n      received,\n      (received) => {\n        if (received) {\n          status.value = 1;\n          clearInterval(timerId);\n        }\n      },\n      { immediate: true }\n    );\n\n    const status = ref(1);\n    const requestFreeMinimum = async () => {\n      status.value = 2;\n      const r = await getFreeMinimum(\n        props.token,\n        $web3.state.account,\n        address.value\n      );\n      if (r[0]) {\n        status.value = 3;\n      } else {\n        status.value = 4;\n      }\n      error.value = r[1];\n    };\n\n    return {\n      address,\n      received,\n      avaible,\n      error,\n      status,\n      requestFreeMinimum\n    };\n  }\n};\n</script>\n","import configApp from \"@/config\";\nimport { $web3 } from \"@/plugins/web3\";\nimport axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: `${configApp.nft_oracle_endpoint}api`\n});\n\nexport const checkAvailible = async (token, accountEthereum) => {\n  try {\n    const result = await api.post(\"/check\", {\n      nft: token,\n      address: accountEthereum\n    });\n    if (result.data.result) {\n      return [result.data.result, result.data.error];\n    } else {\n      return [false, result.data.error];\n    }\n  } catch (error) {\n    return [false, error.message];\n  }\n};\n\nexport const getFreeMinimum = async (\n  token,\n  accountEthereum,\n  accauntParachain\n) => {\n  try {\n    const msg = JSON.stringify({\n      nft: token,\n      address: accountEthereum,\n      for: accauntParachain\n    });\n    const signature = await $web3.signer.signMessage(msg);\n\n    const result = await api.post(\"/verify\", {\n      signature,\n      nft: token,\n      address: accountEthereum,\n      for: accauntParachain\n    });\n    if (result.data.result) {\n      return [result.data.result, result.data.error];\n    } else {\n      return [false, result.data.error];\n    }\n  } catch (error) {\n    return [false, error.message];\n  }\n};\n","import { render } from \"./FreeMinimum.vue?vue&type=template&id=329595d0\"\nimport script from \"./FreeMinimum.vue?vue&type=script&lang=js\"\nexport * from \"./FreeMinimum.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./NftToken.vue?vue&type=template&id=48229e54\"\nimport script from \"./NftToken.vue?vue&type=script&lang=js\"\nexport * from \"./NftToken.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./NftInfo.vue?vue&type=template&id=4b2d5a1a\"\nimport script from \"./NftInfo.vue?vue&type=script&lang=js\"\nexport * from \"./NftInfo.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <robo-layout-section>\n    <robo-text title=\"1\">Season pass</robo-text>\n    \n    <hr />\n    {{ store.state.robonomicsUIvue.ethereum.activeAccount }}\n    <hr/>\n    {{store.state.robonomicsUIvue.ethereum.activeProviderRdns}}\n    <div>\n      <div v-if=\"$web3.state.isReady\">\n        <nft-info v-if=\"$web3.state.account\" />\n        <div v-else>Not found account</div>\n      </div>\n      <div v-else>...</div>\n      <div v-if=\"$web3.state.error\">\n        {{ $web3.state.error }}\n      </div>\n    </div>\n  </robo-layout-section>\n</template>\n\n<script setup>\nimport NftInfo from \"@/components/web3/NftInfo.vue\";\nimport { $web3 } from \"@/plugins/web3\";\nimport { watch, onMounted } from \"vue\";\nimport { useStore } from \"vuex\";\n\nconst store = useStore();\n\nconst providers = [];\nconst handler = (event) => providers.push(event.detail);\n\nwatch(\n  () => store.state.robonomicsUIvue.ethereum.activeProviderRdns,\n  async (value) => {\n    const index = providers.findIndex((item) => {\n      if (item.info.rdns === value) {\n        return true;\n      }\n      return false;\n    });\n    if (index >= 0) {\n      try {\n        await $web3.setProvider(providers[index].provider);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }\n);\n\nwatch(\n  () => store.state.robonomicsUIvue.ethereum.activeAccount,\n  async () => {\n    await $web3.setSigner();\n  }\n);\n\nwindow.addEventListener(\"eip6963:announceProvider\", handler);\nwindow.dispatchEvent(new CustomEvent(\"eip6963:requestProvider\"));\n\nonMounted(async () => {\n  const index = providers.findIndex((item) => {\n      if (item.info.rdns === store.state.robonomicsUIvue.ethereum.activeProviderRdns) {\n        return true;\n      }\n      return false;\n    });\n    if (index >= 0) {\n      try {\n        await $web3.setProvider(providers[index].provider);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    await $web3.setSigner();\n})\n</script>\n","import script from \"./Season-pass-2.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Season-pass-2.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","const chains =\n    {\n       1: {\n        name: 'Ethereum Mainnet'\n       },\n       2: {\n        name: 'Expanse Network'\n       },\n       11155111: {\n        name: 'Sepolia'\n       }\n    }\n\nexport default chains","<template>\n  <robo-layout-section>\n\n    <robo-card allowExpand class=\"seasonpass\">\n        <robo-text title=\"3\" offset=\"x0\">Your season pass 2024-2025</robo-text>\n        <div class=\"seasonpass-content\">\n            <div class=\"seasonpass-content-inside\">\n                <div class=\"seasonpass-msg\" v-if=\"status !== 'START'\">\n                    <template v-if=\"status === 'NO_ETH_EXTENSION'\">Connect or install Ethereum extension in your browser</template>\n                    <template v-if=\"status === 'WRONG_ETH_NETWORK'\">Please, switch to {{chains[workingchain].name}}</template>\n                    <template v-if=\"status === 'NO_WALLET_PERMISSION'\">Please, check permissions in the connected extension</template>\n                    <template v-if=\"status === 'NO_ETH_ACCOUNT'\">No Ethereum account found: check your extension</template>\n                    <template v-if=\"status === 'NFT_NOT_FOUND' || status === 'TOKENS_NOT_FOUND'\">No Season Pass NFT accosiated with this account</template>\n                </div>\n                <robo-loader v-if=\"status === 'NFT_STARTED_GETTING'\" size=\"3\" />\n\n                <div class=\"tokens\" :class=\"'tokens-show-' + curentslide\" v-if=\"status === 'TOKENS_FOUND' && tokens\">\n                    <div class=\"token\" v-for=\"token in tokens\" :key=\"token.tokenId\">\n                        <img :src=\"`https://ipfs.io/ipfs/${token?.image}`\" />\n                        <robo-text lines=\"dotted\" size=\"small\">\n                            <robo-grid type=\"flex\" offset=\"x0\" gap=\"x025\" galign=\"start\" valign=\"center\">\n                                {{token?.name}}\n                            </robo-grid>\n                            <robo-grid type=\"flex\" offset=\"x0\" gap=\"x025\" galign=\"start\" valign=\"center\">\n                                {{token?.tokenId}}\n                            </robo-grid>\n                            <robo-grid type=\"flex\" offset=\"x0\" gap=\"x025\" galign=\"start\" valign=\"center\">\n                                {{token?.status}}\n                            </robo-grid>\n                            <robo-grid type=\"flex\" offset=\"x0\" gap=\"x025\" galign=\"start\" valign=\"center\">\n                                <template v-if=\"token.activated\">Activated</template>\n                                <template v-else>Not activated</template>\n                            </robo-grid>\n                        </robo-text>\n                        <robo-section offset=\"x1\">\n                            <robo-button v-if=\"token.tokenId && !token.activated\" @click.prevent=\"activateToken(token.tokenId)\" size=\"small\">Activate</robo-button>\n                        </robo-section>\n                    </div>\n                </div>\n                <div class=\"tokens-switch\" :class=\"'tokens-switch-showed-' + curentslide\" v-if=\"status === 'TOKENS_FOUND'\">\n                    <robo-button v-for=\"(token, i) in tokens\" :key=\"token.tokenId\" clean @click.prevent=\"setslide(i + 1)\">{{i + 1}}</robo-button>\n                </div>\n            </div>\n            <div class=\"seasonpass-monkey\" aria-hidden=\"true\" v-if=\"status !== 'TOKENS_FOUND'\">\n                <img src=\"images/season-pass-24-25-monkey.webp\" aria-hidden=\"true\"/>\n            </div>\n        </div>\n    </robo-card>\n\n    <!-- <details>\n        <summary>tech</summary>\n        <div v-for=\"token in tokens\" :key=\"token.tokenId\">\n            <img :src=\"`https://ipfs.io/ipfs/${token.image}`\" style=\"width: 200px\" />\n            <p>{{token.name}}</p>\n            <p>activated: {{token.activated}}, {{token.tokenId}}</p>\n            <p>status: {{token?.status}}</p>\n            <robo-button v-if=\"token.tokenId && !token.activated\" @click.prevent=\"activateToken(token.tokenId)\">Activate</robo-button>\n        </div>\n\n        {{account}}\n        <hr/>\n        {{provider?.info?.name}}\n        <hr/>\n        {{balance}}\n        <hr/>\n        {{status}}\n    </details> -->\n\n  </robo-layout-section>\n</template>\n\n<script setup>\nimport { reactive, computed, onMounted, ref, watch } from \"vue\";\nimport { useStore } from \"vuex\";\nconst store = useStore();\n\nimport nft_abi from \"../../components/web3/abi/NFT.json\";\nimport { ethers } from \"ethers\";\nimport { address } from \"@/config\";\n\nimport chains from \"../../eth_chains\";\n\n/* + get providers */\nimport { createStore } from 'mipd';\nconst mipdstore = createStore();\n\nconst state = reactive({ \n    providers: mipdstore.getProviders()\n});\n\nmipdstore.subscribe(providers => {\n    console.log('Providers updated:', providers);\n    state.providers = providers;\n});\n/* - get providers */\n\nconst account = computed(() =>{\n    return store.state.robonomicsUIvue.ethereum.activeAccount;\n});\n\nconst provider = computed(() =>{\n    return state.providers.find(i => i.info.rdns === store.state.robonomicsUIvue.ethereum.activeProviderRdns)\n});\n\nconst isConnected = () => {\n    if(provider?.value) {\n        return provider.value?.provider?._state?.isConnected || provider.value?.provider?.isConnected\n    } else {\n        return false;\n    }\n}\n\nconst workingchain = 11155111;\nconst balance = ref(null);\nconst tokens = ref([]);\nlet signer;\nlet contract;\nlet providerethers = null;\nconst status = ref('START');\nconst curentslide = ref(1);\n\nconst setslide = (s) => {\n    curentslide.value = s\n}\n\nconst getEthersProviderObj = () => {\n    try {\n        providerethers = new ethers.BrowserProvider(provider.value.provider);\n    } catch (error) { console.log(error); }\n}\n\nconst getNFT = async (blockupdate = false) => {\n\n    if(!blockupdate) {\n        status.value = '';\n        tokens.value = [];\n\n        if(!provider.value || !isConnected()) {\n            status.value = 'NO_ETH_EXTENSION';\n            return;\n        }\n    }\n\n    try {\n\n        if(!blockupdate) {\n            const perms = await provider.value.provider.request({method: 'wallet_getPermissions', params: [{ eth_accounts: {} }]});\n            if(!perms || !perms.some(i => i.parentCapability === 'eth_accounts')) {\n                status.value = 'NO_WALLET_PERMISSION';\n                return;\n            }\n\n            const accounts = await provider.value.provider.request({method: 'eth_requestAccounts', params: [{ eth_accounts: {} }]});\n            if(!accounts || accounts?.length < 1) {\n                status.value = 'NO_ETH_ACCOUNT';\n                return;\n            }\n            \n            const chain = await provider.value.provider.request({method: 'eth_chainId', params: [{ eth_accounts: {} }]});\n            if(parseInt(chain) !== workingchain) {\n                status.value = 'WRONG_ETH_NETWORK';\n                return;\n            }\n\n            status.value = 'NFT_STARTED_GETTING';\n\n            getEthersProviderObj();\n            signer = await providerethers.getSigner();\n            contract = new ethers.Contract(address.nft, nft_abi, signer);\n        }\n\n        contract.balanceOf(signer.address)\n            .then(async (r) => {\n                if(blockupdate) {\n                    if(balance.value === parseFloat(r)){\n                        return;\n                    }\n                }\n                balance.value = parseFloat(r);\n\n                if(!balance.value || balance.value < 1) {\n                    status.value = 'NFT_NOT_FOUND';\n                } else {\n                    await loadTokens();\n                }\n\n            })\n            .catch((e) => {\n                console.log(e);\n            });\n    } catch (error) {\n        status.value = 'NFT_NOT_FOUND';\n        console.log(error);\n    }\n}\n\nconst loadTokens = async () => {\n\n    const ids = [];\n    for (let index = 0; index < balance.value; index++) {\n        try {\n            const tokenId = await contract.tokenOfOwnerByIndex(\n                signer.address,\n                index\n            );\n\n            const uri = await contract.tokenURI(tokenId);\n            const ipfsHash = uri.split(\"ipfs://\").pop();\n            const data = await fetch(`https://ipfs.io/ipfs/${ipfsHash}`);\n            const res = await data.json();\n\n            ids.push({\n                activated: await contract.activatedOf(tokenId),\n                tokenId: tokenId.toString(),\n                name: `${res.name} #${tokenId.toString()}`,\n                image: res.image.split(\"ipfs://\").pop(),\n                status: 'INIT'\n            });\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    tokens.value = ids;\n\n    if(tokens.value?.length > 0) {\n        status.value = 'TOKENS_FOUND';\n    } else {\n        status.value = 'TOKENS_NOT_FOUND';\n    }\n}\n\nconst activateToken = async (tokenId) => {\n    let current = 0;\n\n    if(tokens.value) {\n        current = tokens.value.findIndex(i => i.tokenId === tokenId);\n    }\n\n    try {\n        tokens.value[current].status = 'ACTIVATION_STARTED';\n\n        const tx = await contract.connect(signer).activate(tokenId);\n        console.log('tx', tx);\n        await loadTokens(); // for updating status\n        tokens.value[current].status = 'ACTIVATION_ENDED';\n    } catch (error) {\n        console.error(error);\n\n        if(error.code === \"ACTION_REJECTED\") {\n            tokens.value[current].status = 'ACTIVATION_REJECTED';\n        } else {\n            tokens.value[current].status = 'ACTIVATION_NOT_SUCCESSFULL';\n        }\n    }\n}\n\n\nwatch([provider, account], async() => {\n    balance.value = null;\n    await getNFT();\n});\n\nonMounted( async () => {\n\n    // const b = await providerethers.getBalance(account.value)\n    // console.log('getBalance', ethers.formatEther(b))\n    await getNFT();\n\n    if(providerethers) {\n        providerethers.on('block', async () => {\n            await getNFT(true);\n        });\n    }\n})\n\n</script>\n\n<style>\n    .seasonpass .robo-card-content {\n        display: grid;\n        grid-template-rows: calc(var(--robo-space) * 4) auto;\n        gap: calc(var(--robo-space) * 2);\n        align-items: stretch;\n    }\n</style>\n\n<style scoped>\n    .seasonpass {\n        position: relative;\n        min-height: 600px;\n    }\n\n    .seasonpass:not(.expand) {\n        max-width: 700px;\n        margin: 0 auto;\n    }\n\n    .seasonpass-monkey {\n        position: absolute;\n        bottom: 0;\n        left: 0;\n        right: 0;\n        text-align: center;\n        opacity: 0;\n        visibility: hidden;\n        animation: flick 2s linear 0.3s forwards;\n        z-index: 0;\n    }\n\n    @keyframes flick {\n        10% {\n            opacity: 0;\n            visibility: hidden;\n        }\n        20% {\n            opacity: 1;\n            visibility: visible;\n        }\n        30% {\n            opacity: 0;\n            visibility: hidden;\n        }\n        40% {\n            opacity: 1;\n            visibility: visible;\n        }\n        50% {\n            opacity: 0;\n            visibility: hidden;\n        }\n        60% {\n            opacity: 1;\n            visibility: visible;\n        }\n        100% {\n            opacity: 1;\n            visibility: visible;\n        }\n    }\n\n    .seasonpass-monkey img {\n        display: inline-block;\n        max-height: 600px;\n        opacity: 0.5;\n    }\n\n    @media (prefers-color-scheme: dark){\n        .seasonpass-monkey img {\n            opacity: 0.2;\n        }\n    }\n\n    .seasonpass-msg {\n        font-weight: bold;\n        text-align: center;\n        max-width: 500px;\n    }\n\n    .seasonpass-content {\n        justify-self: center;\n        align-content: center;\n        min-height: calc(600px - calc(var(--robo-space) * 4));\n    }\n\n    .seasonpass-content-inside {\n        position: relative;\n        z-index: 1;\n    }\n\n    .tokens .token {\n        display: none;\n    }\n\n    .tokens-show-1 .token:nth-child(1),\n    .tokens-show-2 .token:nth-child(2),\n    .tokens-show-3 .token:nth-child(3),\n    .tokens-show-4 .token:nth-child(4),\n    .tokens-show-5 .token:nth-child(5),\n    .tokens-show-6 .token:nth-child(6) {\n        display: block;\n    }\n\n    .tokens-switch-showed-1 .robo-button:nth-child(1),\n    .tokens-switch-showed-2 .robo-button:nth-child(2),\n    .tokens-switch-showed-3 .robo-button:nth-child(3),\n    .tokens-switch-showed-4 .robo-button:nth-child(4),\n    .tokens-switch-showed-5 .robo-button:nth-child(5),\n    .tokens-switch-showed-6 .robo-button:nth-child(6) {\n        opacity: 0.5;\n    }\n\n    .token img {\n        display: block;\n        max-width: 80%;\n        margin: var(--robo-space) auto;\n    }\n\n    .tokens-switch {\n        margin-top: calc(var(--robo-space) * 2);\n    }\n</style>\n","import script from \"./Season-pass.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Season-pass.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Season-pass.vue?vue&type=style&index=0&id=d54f8394&lang=css\"\nimport \"./Season-pass.vue?vue&type=style&index=1&id=d54f8394&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-d54f8394\"]])\n\nexport default __exports__","<template>\n  <robo-layout-section width=\"middle-wide\">\n\n    <robo-grid minColumnWidth=\"200px\" gap=\"x2\">\n\n      <robo-section>\n        <robo-section card>\n          <template v-if=\"rwsactive && rwsactive !== ''\">\n            <robo-rws-setup-active :show=\"['name', 'owner', 'date', 'userstext', 'link']\" />\n          </template>\n          <template v-else>\n            <robo-text title=\"4\" align=\"left\">RWS subscription</robo-text>\n            <robo-section offset=\"x1\">\n              <robo-text size=\"small\" weight=\"normal-italic\">\n                <robo-grid gap=\"x05\" columns=\"1\">\n                  <robo-grid-item borderbottom>\n                    Price from: <b>~ {{ price }} XRT </b>\n\n                    <robo-details>\n                      <template #summary>\n                        <robo-icon icon=\"circle-question\" />\n                      </template>\n                      <robo-grid gap=\"x05\">\n                        <robo-text weight=\"bold\">Where to buy XRT</robo-text>\n                        <robo-link href=\"https://app.basilisk.cloud/trade\">\n                          Basilisk\n                        </robo-link>\n                        <robo-link\n                          href=\"https://app.solarbeam.io/exchange/swap\"\n                        >\n                          Solarbeam\n                        </robo-link>\n                        <robo-link\n                          href=\"https://trade.kraken.com/markets/kraken/xrt/usd\"\n                        >\n                          Kraken\n                        </robo-link>\n                      </robo-grid>\n                    </robo-details>\n                  </robo-grid-item>\n\n                  <robo-grid-item borderbottom>\n                    Activation time <b>~ 2 min</b>\n                  </robo-grid-item>\n\n                  <robo-grid-item>\n                    Available subscriptions:\n                    <b>{{ freeAuctions }}</b>\n                  </robo-grid-item>\n                </robo-grid>\n              </robo-text>\n            </robo-section>\n\n            <robo-button :router=\"linkActivate\" size=\"small\" block>\n              <robo-icon icon=\"wallet\" /> Buy a subscription\n            </robo-button>\n          </template>\n        </robo-section>\n      </robo-section>\n\n      <robo-section>\n        <robo-text title=\"4\" align=\"left\" offset=\"x05\">Open-source hardware & web3 cloud</robo-text>\n        <robo-text size=\"small\" weight=\"normal-italic\">\n          <robo-grid gap=\"x05\" columns=\"1\">\n            <robo-grid-item borderbottom>\n              <robo-icon icon=\"check\" /> Secured data, only you have an access\n            </robo-grid-item>\n            <robo-grid-item borderbottom>\n              <robo-icon icon=\"check\" /> Remote control without any corporate clouds\n            </robo-grid-item>\n            <robo-grid-item borderbottom>\n              <robo-icon icon=\"check\" /> Brand-independent smart home, combine wanted devices\n            </robo-grid-item>\n            <robo-grid-item>\n              <robo-icon icon=\"check\" /> Update your Robonomics devices as you wish with Type-C\n            </robo-grid-item>\n          </robo-grid>\n        </robo-text>\n      </robo-section>\n    </robo-grid>\n  </robo-layout-section>\n</template>\n\n<script>\nimport { useRobonomics } from \"@/hooks/useRobonomics\";\nimport { fromUnit } from \"@/utils/tools\";\nimport { bnToBn } from \"@polkadot/util\";\nimport { computed, onUnmounted, ref, watch } from \"vue\";\nimport { useStore } from \"vuex\";\n\nexport default {\n  setup() {\n    const price = ref(0);\n    const freeAuctions = ref(0);\n    let unsubscribeBlock = null;\n\n    const store = useStore();\n    const rwsactive = computed(() => {\n      return store.state.robonomicsUIvue.rws.active;\n    });\n    const linkActivate = computed(() => {\n      return store.state.robonomicsUIvue.rws.links.activate;\n    });\n\n    const { isReady, getInstance } = useRobonomics();\n\n    watch(\n      isReady,\n      async (isReady) => {\n        if (isReady) {\n          const robonomics = getInstance();\n          freeAuctions.value = (await robonomics.rws.getAuctionQueue()).length;\n          unsubscribeBlock = await robonomics.events.onBlock(async () => {\n            freeAuctions.value = (\n              await robonomics.rws.getAuctionQueue()\n            ).length;\n          });\n          const minimalBid = await robonomics.rws.getMinimalBid();\n          price.value = minimalBid.add(bnToBn(1));\n        }\n      },\n      { immediate: true }\n    );\n\n    onUnmounted(() => {\n      if (unsubscribeBlock) {\n        unsubscribeBlock();\n      }\n    });\n\n    const priceFormat = computed(() => {\n      if (isReady.value) {\n        return fromUnit(\n          price.value,\n          getInstance().api.registry.chainDecimals[0],\n          0\n        );\n      }\n      return 0;\n    });\n\n    return {\n      rwsactive,\n      linkActivate,\n      freeAuctions,\n      price: priceFormat\n    };\n  }\n};\n</script>\n\n<style>\n#home-links .robo-link {\n  position: relative;\n  display: block;\n  background-color: var(--robo-color-blue-80);\n  min-height: 150px;\n  color: var(--robo-color-light);\n  padding: var(--robo-space);\n  font-weight: bold;\n  text-transform: uppercase;\n}\n\n#home-links .robo-link:before {\n  content: \"\";\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  height: 15px;\n  background-color: var(--robo-color-blue);\n  z-index: 1;\n  transition: 0.2s all;\n}\n\n#home-links .robo-link:hover::before {\n  height: 100%;\n}\n\n#home-links .robo-link span {\n  display: block;\n  margin-top: 30px;\n  position: relative;\n  z-index: 2;\n}\n</style>\n","import { render } from \"./Home.vue?vue&type=template&id=307ab300\"\nimport script from \"./Home.vue?vue&type=script&lang=js\"\nexport * from \"./Home.vue?vue&type=script&lang=js\"\n\nimport \"./Home.vue?vue&type=style&index=0&id=307ab300&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <robo-section offset=\"x2\" width=\"narrow\">\n    <robo-section offset=\"x3\">\n      <robo-select\n        block\n        :values=\"commands.map((item) => item.value)\"\n        :options=\"commands.map((item) => item.name)\"\n        v-model=\"parameter\"\n      />\n      <br />\n      <robo-button @click=\"send\" block :loading=\"proccess\">Pay</robo-button>\n      <robo-text weight=\"bold\" v-if=\"result\">{{ result }}</robo-text>\n      <robo-text highlight=\"error\" v-if=\"error\">{{ error }}</robo-text>\n    </robo-section>\n  </robo-section>\n</template>\n\n<script>\nimport { ref, inject } from \"vue\";\nimport * as config from \"./config\";\n\nexport default {\n  setup() {\n    const RobonomicsProvider = inject(\"RobonomicsProvider\");\n\n    const proccess = ref(false);\n    const result = ref(null);\n    const error = ref(null);\n    const commands = ref(config.listOfCommands);\n    const parameter = ref(config.listOfCommands[0].value);\n    const unsubscribe = ref(null);\n\n    const send = async () => {\n      error.value = \"\";\n      result.value = \"\";\n      proccess.value = true;\n      try {\n        const txs = [\n          RobonomicsProvider.instance.value.api.tx.balances.transfer(\n            config.robot,\n            config.price\n          ),\n          RobonomicsProvider.instance.value.launch.send(\n            config.robot,\n            parameter.value\n          )\n        ];\n        const tx = RobonomicsProvider.instance.value.api.tx.utility.batch(txs);\n        const resultTx =\n          await RobonomicsProvider.instance.value.accountManager.signAndSend(\n            tx\n          );\n        console.log(\"saved\", resultTx);\n        result.value = `${resultTx.blockNumber}-${resultTx.txIndex}`;\n      } catch (error) {\n        console.log(error);\n        error.value = error.message;\n      }\n      proccess.value = false;\n    };\n\n    return {\n      proccess,\n      result,\n      error,\n      commands,\n      parameter,\n      unsubscribe,\n      send\n    };\n  }\n};\n</script>\n","export const price = 500_000_000;\nexport const robot = \"4GfZP7fbGZBx5GxR4mreLGTm872vHYhDMmaV6d1SEHGtv7AP\";\nexport const listOfCommands = [\n  {\n    name: \"Wave Hand\",\n    value: \"0x3000000000000000000000000000000000000000000000000000000000000000\"\n  },\n  {\n    name: \"Wave Hand with Turn\",\n    value: \"0x3100000000000000000000000000000000000000000000000000000000000000\"\n  },\n  {\n    name: \"Shake Hand\",\n    value: \"0x3200000000000000000000000000000000000000000000000000000000000000\"\n  }\n];\n","import { render } from \"./RobonomicsLaunch.vue?vue&type=template&id=40ebbd76\"\nimport script from \"./RobonomicsLaunch.vue?vue&type=script&lang=js\"\nexport * from \"./RobonomicsLaunch.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <robo-layout-section>\n    <robo-section offset=\"x2\" width=\"narrow\" style=\"text-align: center\">\n      <h2>Pay the robot with cryptocurrency.</h2>\n      <br />\n      <robo-text>\n        Experience this unique demo of the future robot economy on the streets\n        of Las Vegas during CES 2025! Pay one Robonomics token ($XRT) to a\n        humanoid for any basic action.\n      </robo-text>\n      <br />\n      <robo-text weight=\"bold\" style=\"font-size: 40px\">\n        Price: 0.5<img src=\"./icon_XRT.png\" class=\"logo\" />\n      </robo-text>\n    </robo-section>\n\n    <template v-if=\"RobonomicsProvider.isReady\">\n      <robonomics-launch />\n    </template>\n    <template v-else>...</template>\n  </robo-layout-section>\n</template>\n\n<script setup>\nimport { inject } from \"vue\";\nimport RobonomicsLaunch from \"./RobonomicsLaunch.vue\";\n\nconst RobonomicsProvider = inject(\"RobonomicsProvider\");\n</script>\n\n<style scoped>\n.logo {\n  width: 45px;\n  vertical-align: text-top;\n  margin: -2px 5px 0;\n}\n</style>\n","import script from \"./RobonomicsApp.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./RobonomicsApp.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./RobonomicsApp.vue?vue&type=style&index=0&id=2314f0b4&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-2314f0b4\"]])\n\nexport default __exports__","<script>\nexport default {\n  created: function () {\n    window.location.href = `https://v0.dapp.robonomics.network/${this.$route.href}`;\n  }\n};\n</script>\n","import script from \"./PathNotFound.vue?vue&type=script&lang=js\"\nexport * from \"./PathNotFound.vue?vue&type=script&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <robo-layout-section>\n    <robo-template-rws-buy\n      :price=\"price\"\n      activationtime=\"2\"\n      :available=\"freeAuctions\"\n      :chainInfoUploaded=\"chainInfoStatus\"\n      :rwsExpiration=\"expiredate\"\n      @on-activate=\"onActivate\"\n    />\n  </robo-layout-section>\n</template>\n\n<script>\nimport { useAccount } from \"@/hooks/useAccount\";\nimport { useBalance } from \"@/hooks/useBalance\";\nimport { useDevices } from \"@/hooks/useDevices\";\nimport { useRobonomics } from \"@/hooks/useRobonomics\";\nimport { useSend } from \"@/hooks/useSend\";\nimport { useSubscription } from \"@/hooks/useSubscription\";\nimport { fromUnit } from \"@/utils/tools\";\nimport { bnToBn } from \"@polkadot/util\";\nimport { computed, onUnmounted, ref, watch, watchEffect } from \"vue\";\n\nexport default {\n  setup() {\n    const price = ref(0);\n    const freeAuctions = ref(0);\n    const chainInfoStatus = ref(false);\n    let unsubscribeBlock = null;\n\n    const { isReady, getInstance } = useRobonomics();\n    const { account, unsubscribe: unsubscribeAccount } = useAccount();\n    const { balance, unsubscribe: unsubscribeBalance } = useBalance(account);\n    const subscription = useSubscription(account);\n    const devices = useDevices(account);\n\n    watch(\n      isReady,\n      async (isReady) => {\n        if (isReady) {\n          const robonomics = getInstance();\n          freeAuctions.value = (await robonomics.rws.getAuctionQueue()).length;\n          unsubscribeBlock = await robonomics.events.onBlock(async () => {\n            freeAuctions.value = (\n              await robonomics.rws.getAuctionQueue()\n            ).length;\n          });\n\n          const minimalBid = await robonomics.rws.getMinimalBid();\n          price.value = minimalBid.add(bnToBn(1));\n          chainInfoStatus.value = true;\n        }\n      },\n      { immediate: true }\n    );\n\n    onUnmounted(() => {\n      if (unsubscribeBlock) {\n        unsubscribeBlock();\n      }\n      if (unsubscribeBalance) {\n        unsubscribeBalance();\n      }\n      unsubscribeAccount();\n    });\n\n    const transaction = useSend();\n    const onActivate = async (setStatus) => {\n\n      /* это для тестов eslint-disable no-unreachable */\n      // setStatus(\"ok\");\n      // return;\n\n      if (!isReady.value) {\n        setStatus(\"error\", \"Parachain is not ready\");\n        return;\n      }\n\n      if (\n        !balance.value ||\n        bnToBn(balance.value).lt(price.value.add(bnToBn(10000000)))\n      ) {\n        console.log(balance.value);\n        setStatus(\n          \"error\",\n          \"Subscription can not be activated due to unsuffcicient XRT balance\"\n        );\n        return;\n      }\n\n      if (freeAuctions.value <= 0) {\n        setStatus(\"error\", \"There are no available subscriptions\");\n        return;\n      }\n\n      if (subscription.hasSubscription.value && subscription.isActive.value) {\n        setStatus(\"error\", \"You have an active subscription\");\n        return;\n      }\n\n      const robonomics = getInstance();\n      let call = robonomics.rws.bid(\n        Number(await robonomics.rws.getFirtsFreeAuction()),\n        price.value\n      );\n      if (!devices.devices.value.includes(account.value)) {\n        call = robonomics.api.tx.utility.batch([\n          call,\n          robonomics.rws.setDevices([...devices.devices.value, account.value])\n        ]);\n      }\n      const tx = transaction.createTx();\n      await transaction.send(tx, call);\n      if (tx.error.value) {\n        if (tx.error.value !== \"Cancelled\") {\n          setStatus(\"error\", tx.error.value);\n        } else {\n          setStatus(\"cancel\");\n        }\n        return;\n      }\n\n      const unsubscribeBlock = await robonomics.events.onBlock(() => {\n        subscription.loadLedger();\n      });\n      const stopWatchEffect = watchEffect(() => {\n        if (subscription.hasSubscription.value && subscription.isActive.value) {\n          stopWatchEffect();\n          unsubscribeBlock();\n          setStatus(\"ok\");\n        }\n      });\n    };\n\n    const priceFormat = computed(() => {\n      if (isReady.value) {\n        return fromUnit(\n          price.value,\n          getInstance().api.registry.chainDecimals[0],\n          0\n        );\n      }\n      return 0;\n    });\n\n    return {\n      freeAuctions,\n      price: priceFormat,\n      expiredate: subscription.validUntil,\n      chainInfoStatus,\n      onActivate\n    };\n  }\n};\n</script>","import { ref, watch } from \"vue\";\nimport { useRobonomics } from \"./useRobonomics\";\n\nexport const useBalance = (account) => {\n  const balance = ref(null);\n  const { isReady, getInstance } = useRobonomics();\n  let unsubscribe;\n  watch(\n    [account, isReady],\n    async () => {\n      if (unsubscribe) {\n        unsubscribe();\n      }\n      if (!isReady.value || !account.value) {\n        return;\n      }\n      const robonomics = getInstance();\n      unsubscribe = await robonomics.account.getBalance(account.value, (r) => {\n        balance.value = r.free.sub(r.frozen).toNumber();\n      });\n    },\n    { immediate: true }\n  );\n  return { balance, unsubscribe };\n};\n","import { render } from \"./RwsActivate.vue?vue&type=template&id=a9c313f0\"\nimport script from \"./RwsActivate.vue?vue&type=script&lang=js\"\nexport * from \"./RwsActivate.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <robo-layout-section>\n\n    <robo-section width=\"narrow\" centered>\n        <robo-text title=\"3\" offset=\"x1\">Saved subscription setups</robo-text>\n\n        <robo-tabs v-if=\"$store.state.robonomicsUIvue.rws.list.length > 1\">\n          <robo-tab label=\"Active subscription\">\n            <robo-rws-setup\n              :onUserDelete=\"removeUser\"\n              :onUserAdd=\"addUser\"\n              :onSaveHapass=\"saveHapass\"\n              :onControllerEdit=\"editController\"\n            />\n          </robo-tab>\n          <robo-tab label=\"All subscriptions\">\n            <robo-rws-setups-list />\n          </robo-tab>\n        </robo-tabs>\n\n        <robo-rws-setup\n          v-else\n          :onUserDelete=\"removeUser\"\n          :onUserAdd=\"addUser\"\n          :onSaveHapass=\"saveHapass\"\n          :onControllerEdit=\"editController\"\n        />\n\n    </robo-section>\n\n  </robo-layout-section>\n</template>\n\n<script>\nimport { useAccount } from \"@/hooks/useAccount\";\nimport { useDevices } from \"@/hooks/useDevices\";\nimport { useRobonomics } from \"@/hooks/useRobonomics\";\nimport { useSend } from \"@/hooks/useSend\";\nimport { u8aToHex } from \"@polkadot/util\";\nimport { decodeAddress, encodeAddress } from \"@polkadot/util-crypto\";\nimport { computed } from \"vue\";\nimport { useStore } from \"vuex\";\n\nexport default {\n  setup() {\n    const store = useStore();\n\n    const setupOwner = computed(() => {\n      return store.state.robonomicsUIvue.rws.active;\n    });\n\n    const { isReady, getInstance } = useRobonomics();\n    const transaction = useSend();\n    const devices = useDevices(setupOwner);\n    const { account } = useAccount();\n\n    const setUser = async (user, setStatus, { skipDuplicateCheck = false } = {}) => {\n      if (!isReady.value) {\n        setStatus(\"error\", \"Parachain is not ready.\");\n        return;\n      }\n      if (setupOwner.value && setupOwner.value !== account.value) {\n        setStatus(\"error\", \"You do not have access to this action.\");\n        return;\n      }\n      if (devices.devices.value.includes(user)) {\n        if(!skipDuplicateCheck) {\n          setStatus(\"error\", \"The address is already in the subscription.\");\n          return;\n        } else {\n          setStatus(\"ok\");\n          return;\n        }\n      }\n\n      const call = await getInstance().rws.setDevices([\n        ...devices.devices.value.filter((addr) => addr !== user),\n        user\n      ]);\n      const tx = transaction.createTx();\n      if (devices.devices.value.includes(account.value)) {\n        await transaction.send(tx, call, setupOwner.value);\n      } else {\n        await transaction.send(tx, call);\n      }\n      if (tx.error.value) {\n        if (tx.error.value !== \"Cancelled\") {\n          setStatus(\"error\", tx.error.value);\n        } else {\n          setStatus(\"cancel\");\n        }\n        return;\n      } else {\n        await devices.loadDevices();\n      }\n      store.commit(\"rws/setUsers\", devices.devices);\n      setStatus(\"ok\");\n    };\n\n    const addUser = async (user, setStatus) => {\n      return setUser(user, setStatus, { skipDuplicateCheck: false });\n    };\n\n    const editController = async (user, setStatus) => {\n      return setUser(user, setStatus, { skipDuplicateCheck: true });\n    };\n\n    const removeUser = async (user, setStatus) => {\n      if (!isReady.value) {\n        setStatus(\"error\", \"Parachain is not ready.\");\n        return;\n      }\n      if (setupOwner.value && setupOwner.value !== account.value) {\n        setStatus(\"error\", \"You do not have access to this action.\");\n        return;\n      }\n      if (devices.devices.value.includes(user)) {\n        const call = await getInstance().rws.setDevices(\n          devices.devices.value.filter((item) => item !== user)\n        );\n        const tx = transaction.createTx();\n        if (devices.devices.value.includes(account.value)) {\n          await transaction.send(tx, call, setupOwner.value);\n        } else {\n          await transaction.send(tx, call);\n        }\n        if (tx.error.value) {\n          if (tx.error.value !== \"Cancelled\") {\n            setStatus(\"error\", tx.error.value);\n          } else {\n            setStatus(\"cancel\");\n          }\n          return;\n        } else {\n          await devices.loadDevices();\n        }\n      }\n      store.commit(\"rws/setUsers\", devices.devices);\n      setStatus(\"ok\");\n    };\n\n    const saveHapass = async (passToSave, setStatus) => {\n      if (!isReady.value) {\n        setStatus(\"error\", \"Parachain is not ready.\");\n        return;\n      }\n      const userAddress = store.state.robonomicsUIvue.rws.user.account;\n      const userType = store.state.robonomicsUIvue.rws.user.acctype ?? 'ed25519';\n      console.log('userType', userType);\n\n      const robonomics = getInstance();\n\n      await robonomics.accountManager.addPair(\n        store.state.robonomicsUIvue.rws.user.key\n      );\n      const user = robonomics.accountManager.encryptor();\n\n      try {\n        encodeAddress(userAddress);\n      } catch (error) {\n        setStatus(\"error\", error.message);\n        return;\n      }\n\n      const encodedDevices = devices.devices.value.map((item) =>\n        encodeAddress(item)\n      );\n      if (!encodedDevices.includes(encodeAddress(userAddress))) {\n        setStatus(\"error\", \"User not found in subscription\");\n        return;\n      }\n\n      const setup = store.state.robonomicsUIvue.rws.list.find(\n        (item) => item.owner === setupOwner.value\n      );\n\n      const passwordForAdmin = user.encryptMessage(\n        passToSave,\n        decodeAddress(setup.controller)\n      );\n\n      const passwordForRecovery = user.encryptMessage(\n        passToSave,\n        decodeAddress(userAddress)\n      );\n\n      const call = await robonomics.datalog.write(\n        JSON.stringify({\n          subscription: setup.owner,\n          ha: setup.controller.address,\n          admin: u8aToHex(passwordForAdmin),\n          user: u8aToHex(passwordForRecovery)\n        })\n      );\n      const tx = transaction.createTx();\n      await transaction.send(tx, call, setup.owner);\n\n      try {\n        const accountOld = store.state.robonomicsUIvue.polkadot.accounts.find(\n          (item) => item.address === store.state.robonomicsUIvue.polkadot.address\n        );\n      \n      if (accountOld) {\n        await robonomics.accountManager.setSender(accountOld.address, {\n          type: accountOld.type,\n          extension: store.state.robonomicsUIvue.polkadot.extensionObj\n        });\n      }\n      } catch (e) { console.error(e); }\n\n      if (tx.error.value) {\n        if (tx.error.value !== \"Cancelled\") {\n          setStatus(\"error\", tx.error.value);\n        } else {\n          setStatus(\"cancel\");\n        }\n        return;\n      }\n\n      setStatus(\"ok\");\n    };\n\n    return {\n      saveHapass,\n      addUser,\n      editController,\n      removeUser\n    };\n  }\n};\n</script>\n","import { render } from \"./RwsSetup.vue?vue&type=template&id=1d61cf28\"\nimport script from \"./RwsSetup.vue?vue&type=script&lang=js\"\nexport * from \"./RwsSetup.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <robo-layout-section>\n    <robo-rws-setup-new\n      :onRequestSubscription=\"onRequestSubscription\"\n      :onSetupGenerate=\"onSetupGenerate\"\n    />\n  </robo-layout-section>\n</template>\n\n<script setup>\nimport { getDevices } from \"@/hooks/useDevices\";\nimport { useRobonomics } from \"@/hooks/useRobonomics\";\nimport { useSend } from \"@/hooks/useSend\";\nimport { getLedger, getValidUntil } from \"@/hooks/useSubscription\";\nimport { nextTick, watch } from \"vue\";\n\nconst { isReady, getInstance } = useRobonomics();\nconst transaction = useSend();\n\nconst onRequestSubscription = async (address, send) => {\n  watch(\n    isReady,\n    async (isReady) => {\n      if (isReady) {\n        try {\n          const robonomics = getInstance();\n          const ledger = await getLedger(robonomics, address);\n          send(getValidUntil(ledger));\n        } catch (e) {\n          console.log(e);\n          send(null);\n        }\n      }\n    },\n    { immediate: true }\n  );\n};\n\nconst onSetupGenerate = async (config, setStatus) => {\n  console.log('onSetupGenerate', config)\n  watch(\n    isReady,\n    async (isReady) => {\n      if (isReady) {\n        try {\n          const robonomics = getInstance();\n          if (robonomics.accountManager.account.address !== config.owner) {\n            setStatus(\"error\", \"owner != signer\");\n            return;\n          }\n          const devices = await getDevices(robonomics, config.owner);\n          if (devices.includes(config.controller.address)) {\n            setStatus(\"ok\", \"Setup saved\");\n            if (stop) {\n              stop();\n            } else {\n              nextTick(() => {\n                stop();\n              });\n            }\n            return;\n          }\n          const call = await robonomics.rws.setDevices([\n            ...devices,\n            config.controller.address\n          ]);\n          const tx = transaction.createTx();\n          if (devices.includes(config.owner)) {\n            await transaction.send(tx, call, config.owner);\n          } else {\n            await transaction.send(tx, call);\n          }\n          if (tx.error.value) {\n            if (tx.error.value !== \"Cancelled\") {\n              setStatus(\"error\", tx.error.value);\n            } else {\n              setStatus(\"error\", 'cancel');\n            }\n            return;\n          } else {\n            setStatus(\"ok\", \"Setup saved\");\n          }\n        } catch (e) {\n          console.log(e);\n          setStatus(\"error\", e);\n        }\n      }\n    },\n    { immediate: true }\n  );\n};\n</script>\n","import script from \"./RwsSetupNew.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./RwsSetupNew.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <robo-layout-section>\n    energy-monitor\n  </robo-layout-section>\n</template>\n","import { render } from \"./Energy-monitor.vue?vue&type=template&id=827cb03e\"\nconst script = {}\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <robo-layout-section>\n    Subscription owner: <robo-input v-model=\"owner\" />\n    <account-unlock\n      @unlock=\"\n        () => {\n          isUnlock = true;\n        }\n      \"\n    />\n    <hr />\n    <div v-if=\"isUnlock\">\n      <h2>Digital twin</h2>\n      <d-twin\n        :address=\"owner\"\n        :owner=\"owner\"\n        :key=\"updateKey\"\n        @twinId=\"\n          (r) => {\n            twinId = r;\n          }\n        \"\n        @find=\"\n          (r) => {\n            finedFiles = r;\n          }\n        \"\n      />\n      <hr />\n      <div v-if=\"finedFiles\">\n        <h2>Files</h2>\n        <template v-for=\"finedFile in finedFiles\" :key=\"finedFile\">\n          <ipfs-file\n            v-if=\"\n              finedFile !==\n              '0x0000000000000000000000000000000000000000000000000000000000000000'\n            \"\n            :hex=\"finedFile\"\n          />\n        </template>\n      </div>\n      <hr />\n\n      <div>\n        <h2>Setup</h2>\n        <encrypt-message\n          @encrypt=\"\n            (data) => {\n              messageHash = data;\n            }\n          \"\n        />\n        <hr />\n        <div v-if=\"messageHash\">\n          <h3>Upload to ipfs</h3>\n          <ipfs-upload\n            :data=\"messageHash\"\n            @upload=\"\n              (result) => {\n                ipfsFile = result;\n              }\n            \"\n          />\n        </div>\n        <hr />\n        <div v-if=\"ipfsFile\">\n          <h3>Save to crust</h3>\n          <crust-store\n            :file=\"ipfsFile\"\n            @store=\"\n              () => {\n                isStored = true;\n              }\n            \"\n          />\n          <div v-if=\"isStored\">Crust saved</div>\n        </div>\n        <hr />\n        <div v-if=\"twinId && ipfsFile\">\n          <h3>Save to digital twin</h3>\n          <d-twin-save\n            :owner=\"owner\"\n            :twinId=\"twinId\"\n            :address=\"owner\"\n            :data=\"ipfsFile.path\"\n            @save=\"\n              () => {\n                isStored = true;\n                updateKey++;\n              }\n            \"\n          />\n          <div v-if=\"isStored\">Digital twin saved</div>\n        </div>\n      </div>\n    </div>\n  </robo-layout-section>\n</template>\n\n<script>\nimport { ref } from \"vue\";\nimport AccountUnlock from \"./Account.vue\";\nimport CrustStore from \"./Crust.vue\";\nimport DTwin from \"./DTwin.vue\";\nimport DTwinSave from \"./DTwinSave.vue\";\nimport EncryptMessage from \"./Encrypt.vue\";\nimport IpfsFile from \"./IpfsFile.vue\";\nimport IpfsUpload from \"./IpfsUpload.vue\";\n\nexport default {\n  name: \"PageSave\",\n  components: {\n    AccountUnlock,\n    EncryptMessage,\n    DTwin,\n    DTwinSave,\n    IpfsUpload,\n    IpfsFile,\n    CrustStore\n  },\n  setup() {\n    const isUnlock = ref(false);\n    const messageHash = ref(\"\");\n    const ipfsFile = ref();\n    const isStored = ref(false);\n    const isSaved = ref(false);\n    const twinId = ref();\n    const finedFiles = ref();\n    const updateKey = ref(0);\n\n    const owner = \"\";\n\n    return {\n      isUnlock,\n      messageHash,\n      ipfsFile,\n      isStored,\n      isSaved,\n      twinId,\n      finedFiles,\n      owner,\n      updateKey\n    };\n  }\n};\n</script>\n\n<style scoped>\nhr {\n  margin: 20px;\n}\n</style>\n","<template>\n  <div>\n    Account seed:\n    <robo-input v-model=\"seed\" />\n    <robo-button @click=\"unlock\">unlock</robo-button>\n  </div>\n</template>\n\n<script>\nimport { useRobonomics } from \"@/hooks/useRobonomics\";\nimport { ref } from \"vue\";\n\nexport default {\n  name: \"AccountUnlock\",\n  emits: [\"unlock\"],\n  setup(_, { emit }) {\n    const seed = ref(\"\");\n\n    const { getInstance } = useRobonomics();\n\n    const unlock = async () => {\n      const robonomics = getInstance();\n\n      try {\n        await robonomics.accountManager.addUri(seed.value);\n      } catch (error) {\n        console.log(error);\n        return;\n      }\n      console.log(robonomics.accountManager.account.address);\n\n      emit(\"unlock\");\n    };\n\n    return {\n      seed,\n      unlock\n    };\n  }\n};\n</script>\n","import { render } from \"./Account.vue?vue&type=template&id=03ef7282\"\nimport script from \"./Account.vue?vue&type=script&lang=js\"\nexport * from \"./Account.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div>\n    <div><b>Ipfs file info</b>: {{ file }}</div>\n    <div v-if=\"info\">replica: {{ info.reported_replica_count }}</div>\n    <div v-if=\"balance && price\">\n      <div><b>Balance</b>: {{ $filters.balance(balance, 12, \"CRU\") }}</div>\n      <div><b>Price</b>: {{ $filters.balance(price, 12, \"CRU\") }}</div>\n\n      <div v-if=\"info === null\">\n        <div v-if=\"canStored\">\n          <robo-button @click=\"storeFile\">store file</robo-button>\n        </div>\n        <div v-else>low balance</div>\n      </div>\n    </div>\n    <div v-else>...</div>\n  </div>\n</template>\n\n<script>\nimport { useRobonomics } from \"@/hooks/useRobonomics\";\nimport { Crust } from \"@/utils/crust\";\nimport { computed, ref } from \"vue\";\n\nexport default {\n  name: \"CrustStore\",\n  props: [\"file\"],\n  emits: [\"store\"],\n  setup(props, { emit }) {\n    const { getInstance } = useRobonomics();\n    const crust = new Crust(\"wss://rpc.crust.network\");\n\n    const balance = ref();\n    const price = ref();\n    const info = ref();\n\n    crust.watch(async () => {\n      const robonomics = getInstance();\n      balance.value = await crust.getBalance(\n        robonomics.accountManager.account.address\n      );\n      price.value = await crust.getStorePrice(props.file.size);\n      info.value = (await crust.getInfo(props.file.path)).toHuman();\n      if (info.value) {\n        emit(\"store\");\n      }\n    });\n\n    const canStored = computed(() => {\n      if (balance.value > price.value) {\n        return true;\n      }\n      return false;\n    });\n\n    const storeFile = async () => {\n      if (canStored.value === false) {\n        return;\n      }\n      const robonomics = getInstance();\n      const tx = crust.storeFile(props.file.path, props.file.size);\n      const res = await crust.signAndSend(\n        robonomics.accountManager.account,\n        tx\n      );\n      console.log(res);\n      emit(\"store\");\n    };\n\n    return {\n      balance,\n      price,\n      info,\n      canStored,\n      storeFile\n    };\n  }\n};\n</script>\n","import { typesBundleForPolkadot } from \"@crustio/type-definitions\";\nimport { ApiPromise, WsProvider } from \"@polkadot/api\";\nimport { cryptoWaitReady } from \"@polkadot/util-crypto\";\n\nexport class Crust {\n  constructor(endpoint) {\n    this.isReady = false;\n    this.init(endpoint);\n  }\n\n  watch(cb) {\n    if (this.isReady) {\n      cb();\n      return;\n    }\n    const intervalId = setInterval(() => {\n      if (this.isReady) {\n        clearInterval(intervalId);\n        cb();\n        return;\n      }\n    }, 100);\n  }\n\n  async init(endpoint) {\n    this.provider = new WsProvider(endpoint);\n    this.api = await ApiPromise.create({\n      provider: this.provider,\n      typesBundle: typesBundleForPolkadot\n    });\n    await cryptoWaitReady();\n    this.isReady = true;\n  }\n\n  async getBalance(account, cb) {\n    if (!cb) {\n      const { data } = await this.api.query.system.account(account);\n      return data.free.sub(data.feeFrozen).toNumber();\n    }\n    return this.api.query.system.account(account, ({ data }) => {\n      cb(data.free.sub(data.feeFrozen).toNumber());\n    });\n  }\n\n  async getStorePrice(file_size) {\n    const fileBaseFee = await this.api.query.market.fileBaseFee();\n    const fileByteFee = await this.api.query.market.fileByteFee();\n    return Math.round(\n      fileBaseFee.toNumber() + (fileByteFee.toNumber() * file_size) / 1024 ** 2\n    );\n  }\n\n  async getInfo(ipfs_cid) {\n    return await this.api.query.market.filesV2(ipfs_cid);\n  }\n\n  addRenewalPoolBalance(ipfs_cid, amount) {\n    return this.api.tx.market.addPrepaid(ipfs_cid, amount);\n  }\n\n  storeFile(ipfs_cid, file_size, tips = 0) {\n    return this.api.tx.market.placeStorageOrder(ipfs_cid, file_size, tips, \"\");\n  }\n\n  async signAndSend(account, tx, options = {}) {\n    return new Promise((resolve, reject) => {\n      tx.signAndSend(\n        account.meta.isInjected ? account.address : account,\n        options,\n        (result) => {\n          if (result.status.isInBlock) {\n            result.events.forEach(async (events) => {\n              const {\n                event: { method, section },\n                phase\n              } = events;\n              if (section === \"system\" && method === \"ExtrinsicFailed\") {\n                let message = \"Error\";\n                if (result.dispatchError?.isModule) {\n                  const mod = result.dispatchError.asModule;\n                  const { docs, name, section } =\n                    mod.registry.findMetaError(mod);\n                  console.log(name, section, docs);\n                  message = docs.join(\", \");\n                }\n                return reject(new Error(message));\n              } else if (\n                section === \"system\" &&\n                method === \"ExtrinsicSuccess\"\n              ) {\n                let blockNumber;\n                if (this.api) {\n                  const block = await this.api.rpc.chain.getBlock(\n                    result.status.asInBlock.toString()\n                  );\n                  blockNumber = block.block.header.number.toNumber();\n                }\n                resolve({\n                  block: result.status.asInBlock.toString(),\n                  blockNumber: blockNumber,\n                  txIndex: phase.asApplyExtrinsic.toHuman(),\n                  tx: tx.hash.toString()\n                });\n              }\n            });\n          }\n        }\n      ).catch(reject);\n    });\n  }\n}\n","import { render } from \"./Crust.vue?vue&type=template&id=387582e3\"\nimport script from \"./Crust.vue?vue&type=script&lang=js\"\nexport * from \"./Crust.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div>\n    <select-twin @change=\"(r) => (twinId = r)\" :key=\"keySelect\" />\n    <create-twin :owner=\"owner\" @create=\"keySelect++\" />\n  </div>\n</template>\n\n<script>\nimport { ref, watch } from \"vue\";\nimport CreateTwin from \"../dtwin/CreateTwin.vue\";\nimport SelectTwin from \"../dtwin/SelectTwin.vue\";\nimport { useTwin } from \"../dtwin/dtwin\";\n\nexport default {\n  props: [\"address\", \"owner\", \"data\"],\n  emits: [\"twinId\", \"find\"],\n  components: { SelectTwin, CreateTwin },\n  setup(props, { emit }) {\n    const twinId = ref();\n    const keySelect = ref(0);\n    const keyRecords = ref(0);\n    const { twin } = useTwin(twinId);\n\n    watch(twinId, (twinId) => {\n      emit(\"twinId\", twinId);\n    });\n\n    watch(twin, (twin) => {\n      if (twin) {\n        const list = [];\n        for (const key in twin) {\n          if (twin[key] === props.address) {\n            list.push(key);\n          }\n        }\n        emit(\"find\", list);\n      }\n    });\n\n    return {\n      twinId,\n      keySelect,\n      keyRecords\n    };\n  }\n};\n</script>\n","import { render } from \"./DTwin.vue?vue&type=template&id=1ab336fb\"\nimport script from \"./DTwin.vue?vue&type=script&lang=js\"\nexport * from \"./DTwin.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div>\n    <robo-button @click=\"save\">save to digital twin</robo-button>\n  </div>\n</template>\n\n<script>\nimport { useTwinAction } from \"../dtwin/dtwin\";\n\nexport default {\n  props: [\"twinId\", \"owner\", \"address\", \"data\"],\n  emits: [\"save\"],\n  setup(props, { emit }) {\n    const { setSource } = useTwinAction(props.owner);\n\n    const save = async () => {\n      const tx = await setSource(props.twinId, props.data, props.address);\n      if (tx.error.value) {\n        if (tx.error.value !== \"Cancelled\") {\n          console.log(tx.error.value);\n        } else {\n          console.log(\"cancel\");\n        }\n        return false;\n      }\n      emit(\"save\");\n    };\n\n    return {\n      save\n    };\n  }\n};\n</script>\n","import { render } from \"./DTwinSave.vue?vue&type=template&id=e0697b7c\"\nimport script from \"./DTwinSave.vue?vue&type=script&lang=js\"\nexport * from \"./DTwinSave.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div>\n    <robo-input v-model=\"data\" />\n    <robo-button @click=\"encrypt\">encrypt</robo-button>\n  </div>\n</template>\n\n<script>\nimport { useRobonomics } from \"@/hooks/useRobonomics\";\nimport { u8aToHex } from \"@polkadot/util\";\nimport { decodeAddress } from \"@polkadot/util-crypto\";\nimport { ref } from \"vue\";\n\nexport default {\n  name: \"EncryptMessage\",\n  emits: [\"encrypt\"],\n  setup(_, { emit }) {\n    const data = ref('{\"name\":\"blushing cow\"}');\n\n    const { getInstance } = useRobonomics();\n\n    const encrypt = () => {\n      const robonomics = getInstance();\n      const user = robonomics.accountManager.encryptor();\n      const encryptedMessage = user.encryptMessage(\n        data.value,\n        decodeAddress(user.address)\n      );\n      const dataHex = u8aToHex(encryptedMessage);\n      emit(\"encrypt\", dataHex);\n    };\n\n    return {\n      data,\n      encrypt\n    };\n  }\n};\n</script>\n","import { render } from \"./Encrypt.vue?vue&type=template&id=6cd25a86\"\nimport script from \"./Encrypt.vue?vue&type=script&lang=js\"\nexport * from \"./Encrypt.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div class=\"block\">\n    <a :href=\"`https://ipfs.io/ipfs/${ipfsHash}`\" target=\"_blank\">\n      {{ ipfsHash }}\n    </a>\n    <div><b>crust info</b>: {{ info }}</div>\n    <div v-if=\"encrypt\"><b>encrypt</b>: {{ encrypt }}</div>\n    <div><b>data</b>: {{ content }}</div>\n  </div>\n</template>\n\n<script>\nimport { useRobonomics } from \"@/hooks/useRobonomics\";\nimport { Crust } from \"@/utils/crust\";\nimport { u8aToString } from \"@polkadot/util\";\nimport { decodeAddress } from \"@polkadot/util-crypto\";\nimport axios from \"axios\";\nimport { hexToCid } from \"robonomics-interface/dist/utils\";\nimport { ref } from \"vue\";\n\nexport default {\n  name: \"IpfsFile\",\n  props: [\"hex\"],\n  setup(props) {\n    const encrypt = ref();\n    const content = ref();\n    const info = ref();\n    const ipfsHash = hexToCid(props.hex);\n\n    const { getInstance } = useRobonomics();\n    const crust = new Crust(\"wss://rpc.crust.network\");\n\n    function omit(key, obj) {\n      const { [key]: omitted, ...rest } = obj;\n      return [rest, omitted];\n    }\n\n    crust.watch(async () => {\n      const res = (await crust.getInfo(ipfsHash)).toHuman();\n      if (res) {\n        const o = omit(\"replicas\", res);\n        info.value = { ...o[0], replicas: Object.keys(o[1]).length };\n      } else {\n        info.value = \"File is not pinned in crust network\";\n      }\n    });\n\n    const decrypt = (data) => {\n      const robonomics = getInstance();\n      const user = robonomics.accountManager.encryptor();\n      const decryptedMessage = user.decryptMessage(\n        data,\n        decodeAddress(user.address)\n      );\n      return u8aToString(decryptedMessage);\n    };\n    const getContentFile = async () => {\n      try {\n        const res = await axios.get(`https://ipfs.io/ipfs/${ipfsHash}`);\n        if (res.data.startsWith(\"0x\")) {\n          encrypt.value = res.data;\n          content.value = decrypt(res.data);\n        } else {\n          encrypt.value = undefined;\n          content.value = res.data;\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getContentFile();\n\n    return {\n      ipfsHash,\n      info,\n      encrypt,\n      content\n    };\n  }\n};\n</script>\n\n<style scoped>\n.block {\n  margin: 5px 0;\n  padding: 5px;\n  border: 1px solid #036ffc;\n}\n</style>\n","import { render } from \"./IpfsFile.vue?vue&type=template&id=0eb1b343&scoped=true\"\nimport script from \"./IpfsFile.vue?vue&type=script&lang=js\"\nexport * from \"./IpfsFile.vue?vue&type=script&lang=js\"\n\nimport \"./IpfsFile.vue?vue&type=style&index=0&id=0eb1b343&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-0eb1b343\"]])\n\nexport default __exports__","<template>\n  <div>\n    Encrypted content:\n    <small>{{ data }}</small>\n    <robo-input v-model=\"ipfsGateway\" />\n    <robo-button @click=\"upload\">upload</robo-button>\n  </div>\n</template>\n\n<script>\nimport { useRobonomics } from \"@/hooks/useRobonomics\";\nimport { stringToU8a } from \"@polkadot/util\";\nimport { ref } from \"vue\";\nimport { IpfsApiClient } from \"../../plugins/ipfs\";\n\nexport default {\n  name: \"IpfsUpload\",\n  props: [\"data\"],\n  emits: [\"upload\"],\n  setup(props, { emit }) {\n    const ipfsGateway = ref(\"https://ipfs-gw.decloud.foundation\");\n\n    const { getInstance } = useRobonomics();\n\n    const upload = async () => {\n      const ipfs = new IpfsApiClient(ipfsGateway.value);\n\n      const robonomics = getInstance();\n\n      try {\n        const signature = (\n          await robonomics.accountManager.account.signMsg(\n            stringToU8a(robonomics.accountManager.account.address)\n          )\n        ).toString();\n        ipfs.auth(null, robonomics.accountManager.account.address, signature);\n        const file = await ipfs.add(props.data);\n\n        emit(\"upload\", {\n          path: file.path,\n          size: file.size\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    return {\n      ipfsGateway,\n      upload\n    };\n  }\n};\n</script>\n","import { render } from \"./IpfsUpload.vue?vue&type=template&id=1b4f81de\"\nimport script from \"./IpfsUpload.vue?vue&type=script&lang=js\"\nexport * from \"./IpfsUpload.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./Page.vue?vue&type=template&id=dcb50b02&scoped=true\"\nimport script from \"./Page.vue?vue&type=script&lang=js\"\nexport * from \"./Page.vue?vue&type=script&lang=js\"\n\nimport \"./Page.vue?vue&type=style&index=0&id=dcb50b02&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-dcb50b02\"]])\n\nexport default __exports__","<template>\n  <Libp2p\n    v-if=\"type === 'libp2p'\"\n    :config=\"config\"\n    :cid=\"cid\"\n    :isKey\n    @connected=\"handlerConnected\"\n    @error=\"handlerError\"\n  />\n  <Launch v-else :config=\"config\" :cid=\"cid\" :isKey />\n</template>\n\n<script>\nimport { useRobonomics } from \"@/hooks/useRobonomics\";\nimport { computed, onMounted, onUnmounted, ref, watch } from \"vue\";\nimport { useStore } from \"vuex\";\nimport Launch from \"./Launch.vue\";\nimport Libp2p from \"./Libp2p.vue\";\nimport { useConfig } from \"./common\";\n\nexport default {\n  components: { Libp2p, Launch },\n  setup() {\n    const store = useStore();\n    const { isReady, accountManager } = useRobonomics();\n    const { config, cid, load } = useConfig();\n    const isKey = ref(false);\n\n    const type = computed(() => {\n      /* always has a value, default is 'libp2p' */\n      return store.state.robonomicsUIvue.polkadot.connection.type;\n    });\n\n    onMounted(() => {\n      // store.commit(\"polkadot/setConnectionConnected\", false);\n      store.commit(\"polkadot/setConnectionStatus\", null);\n    });\n\n    onUnmounted(async () => {\n      if (\n        isReady.value &&\n        isKey.value &&\n        store.state.robonomicsUIvue.polkadot.address !==\n          accountManager.account.address\n      ) {\n        try {\n          const accountOld = store.state.robonomicsUIvue.polkadot.accounts.find(\n            (item) =>\n              item.address === store.state.robonomicsUIvue.polkadot.address\n          );\n          if (accountOld) {\n            await accountManager.setSender(accountOld.address, {\n              type: accountOld.type,\n              extension: store.state.robonomicsUIvue.polkadot.extensionObj\n            });\n          }\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    });\n\n    watch(\n      () => isReady.value,\n      (v) => {\n        if (type.value === \"parachain\") {\n          store.commit(\"polkadot/setConnectionConnected\", v);\n        }\n      },\n      { immediate: true }\n    );\n\n    watch(\n      () => store.state.robonomicsUIvue.rws.user.key,\n      async (key) => {\n        if (key) {\n          await accountManager.addPair(key);\n          isKey.value = true;\n          load();\n        } else {\n          console.log(\"User key not found\");\n        }\n      },\n      { immediate: true }\n    );\n\n    return {\n      store,\n      type,\n      isKey,\n      config,\n      cid,\n      handlerConnected: (result) => {\n        store.commit(\"polkadot/setConnectionType\", \"libp2p\");\n\n        if (result.protoNames().includes(\"p2p-circuit\")) {\n          store.commit(\"polkadot/setConnectionStatus\", \"via relay\");\n        } else {\n          store.commit(\"polkadot/setConnectionStatus\", null);\n        }\n\n        store.commit(\"polkadot/setConnectionConnected\", true);\n      },\n      handlerError: (e) => {\n        console.log(e.message);\n        console.log(\"Switching to parachain\");\n\n        store.commit(\"polkadot/setConnectionType\", \"parachain\");\n        store.commit(\"polkadot/setConnectionConnected\", true);\n        store.commit(\n          \"polkadot/setConnectionStatus\",\n          null\n        ); /* delete message about relay if it was there */\n      }\n    };\n  }\n};\n</script>\n","<template>\n  <robo-smarthome-dashboard\n    :config=\"config\"\n    :datalog=\"data\"\n    :cid=\"cid\"\n    :updateTime=\"updateTime\"\n  />\n\n  <!-- {{data}}, {{dataTest}} -->\n</template>\n\n<script>\nimport { watch } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { useData } from \"./launch\";\n\n// это для тестов верстки карточек, когда все остальные тестовые стенды отвалились\n// import configTest from \"./test/Lugano-config.json\";\n// import dataTest from \"./test/Lugano.json\";\nimport configTest from \"./test/office-config.json\";\nimport dataTest from \"./test/office-datalog.json\";\n\nexport default {\n  props: {\n    isKey: {\n      default: false,\n      type: Boolean\n    },\n    config: {\n      default: null,\n      type: Object\n    },\n    cid: {\n      type: String\n    }\n  },\n  setup(props) {\n    const { data, updateTime, run, launch } = useData();\n    const store = useStore();\n\n    watch(\n      () => props.isKey,\n      (value) => {\n        if (value) {\n          run();\n        }\n      },\n      { immediate: true }\n    );\n\n    watch(\n      () => store.state.robonomicsUIvue.rws.launch,\n      (value) => {\n        try {\n          launch(JSON.parse(value));\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    );\n\n    return { data, updateTime, dataTest, configTest };\n  }\n};\n</script>\n","import { useAccount } from \"@/hooks/useAccount\";\nimport { inject, watch } from \"vue\";\n\nexport function useIpfs() {\n  const { account } = useAccount();\n  const { instance } = inject(\"IpfsProvider\");\n\n  watch(account, async () => {\n    if (instance.value) {\n      instance.value.authClear();\n    }\n  });\n\n  return instance.value;\n}\n","import { u8aToString } from \"@polkadot/util\";\nimport { utils } from \"robonomics-interface\";\n\nconst clearJson = (string) => {\n  return string\n    .replaceAll(\"'\", '\"')\n    .replaceAll(\"\\\\\", \"\")\n    .replaceAll('\"\"', '\"')\n    .replaceAll(\"True\", \"true\")\n    .replaceAll(\"False\", \"false\")\n    .replaceAll(\"None\", '\"None\"');\n};\n\nexport const parseJson = (string) => {\n  try {\n    return JSON.parse(string);\n  } catch (error) {\n    console.log(\"error parse 1\");\n  }\n  try {\n    return JSON.parse(clearJson(string));\n  } catch (error) {\n    console.log(\"error parse 2\");\n    console.log(string);\n  }\n  return false;\n};\n\nconst getLastIndex = async (robonomics, address) => {\n  const id = await robonomics.datalog.getLastId(address);\n  return id.id;\n};\nexport const getLastDatalog = async (robonomics, controller) => {\n  // console.log(\"getLastDatalog\");\n  if (!controller) {\n    return false;\n  }\n  const lastIndex = await getLastIndex(robonomics, controller);\n  if (lastIndex !== null && lastIndex >= 0) {\n    const last = await robonomics.datalog.readByIndex(controller, lastIndex);\n    return { timestamp: last[0].toNumber(), cid: u8aToString(last[1]) };\n  }\n  return false;\n};\n\n// export const getLastDatalog = async (robonomics, controller) => {\n//   console.log(\"getLastDatalog\");\n//   if (!controller) {\n//     return false;\n//   }\n//   const result = await robonomics.datalog.read(controller);\n//   if (!result.length) {\n//     return false;\n//   }\n//   const last = result[result.length - 1];\n//   return { timestamp: last[0].toNumber(), cid: u8aToString(last[1]) };\n// };\n\nexport const getConfigCid = async (robonomics, controller, twin_id) => {\n  // console.log(\"getConfigCid\");\n  if (!controller || (!twin_id && twin_id !== 0)) {\n    return false;\n  }\n  const twin = await robonomics.twin.getTwin(twin_id);\n  if (!twin) {\n    return false;\n  }\n  const configHex = Object.keys(twin).find((key) => twin[key] === controller);\n  if (!configHex) {\n    return false;\n  }\n  return utils.hexToCid(configHex);\n};\n","import configApp from \"@/config\";\nimport { useRobonomics } from \"@/hooks/useRobonomics\";\nimport { createPair, encryptor } from \"@/utils/encryptor\";\nimport { getConfigCid, getLastDatalog, parseJson } from \"@/utils/telemetry\";\nimport { hexToU8a, u8aToString } from \"@polkadot/util\";\nimport { decodeAddress } from \"@polkadot/util-crypto\";\nimport axios from \"axios\";\nimport { ref, watch } from \"vue\";\nimport { useStore } from \"vuex\";\n\nexport const chainSS58 = 32;\n\nconst watchIpfsGateway = async (store) => {\n  return new Promise((resolve) => {\n    if (store.state.robonomicsUIvue.ipfs.activeGateway) {\n      resolve(store.state.robonomicsUIvue.ipfs.activeGateway);\n      return;\n    }\n    let stop;\n    stop = watch(\n      () => store.state.robonomicsUIvue.ipfs.activeGateway,\n      async (activeGateway) => {\n        if (activeGateway) {\n          resolve(activeGateway);\n          if (stop) {\n            stop();\n          }\n        }\n      },\n      { immediate: true }\n    );\n  });\n};\n\nconst catFile = async (store, cid) => {\n  if (!cid) {\n    return false;\n  }\n  try {\n    const activeGateway = await watchIpfsGateway(store);\n    const res = (await axios.get(`${activeGateway}/ipfs/${cid}`)).data;\n    return res;\n  } catch (error) {\n    console.log(error);\n    throw new Error(\"File not available\");\n  }\n};\n\nexport const decryptData = async (encryptedMsg, controller, account) => {\n  if (encryptedMsg) {\n    try {\n      const controllerPublicKey = decodeAddress(controller);\n      const seed = account.decryptMessage(\n        hexToU8a(encryptedMsg[account.address]),\n        controllerPublicKey\n      );\n      const admin = encryptor(createPair(u8aToString(seed)));\n      const data = admin.decryptMessage(\n        hexToU8a(encryptedMsg.data),\n        controllerPublicKey\n      );\n      return parseJson(u8aToString(data));\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n  return false;\n};\n\nexport const readFileDecrypt = async (cid, controller, account, store) => {\n  if (cid) {\n    const data = await catFile(store, cid);\n    if (!data) {\n      console.log(`Error: ${cid} not found in ipfs`);\n      throw new Error(`${cid} not found in ipfs`);\n    }\n    const result = await decryptData(data, controller, account);\n    if (result) {\n      return result;\n    } else {\n      console.log(`Error: decryptMsg`);\n      throw new Error(`decryptMsg`);\n    }\n  }\n  return null;\n};\n\nconst loadSetup = (store) => {\n  if (store.state.robonomicsUIvue.rws.active) {\n    const setupRaw = store.state.robonomicsUIvue.rws.list.find(\n      (item) => item.owner === store.state.robonomicsUIvue.rws.active\n    );\n    if (setupRaw) {\n      try {\n        return {\n          controller: setupRaw.controller.address,\n          owner: setupRaw.owner\n        };\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }\n  return false;\n};\n\nexport const useSetup = () => {\n  const controller = ref(null);\n  const owner = ref(null);\n\n  const store = useStore();\n\n  watch(\n    () => store.state.robonomicsUIvue.rws.active,\n    () => {\n      const setup = loadSetup(store);\n      if (setup) {\n        controller.value = setup.controller;\n        owner.value = setup.owner;\n      }\n    },\n    { immediate: true }\n  );\n\n  return { controller, owner };\n};\n\nexport const notify = (store, text, timeout = 3000) => {\n  store.dispatch(\"app/setStatus\", {\n    value: text,\n    timeout\n  });\n  // console.log(text);\n};\n\nexport const setStatusLaunch = (store, command, status) => {\n  store.commit(\n    \"rws/setLaunch\",\n    JSON.stringify({ ...command, tx: { tx_status: status } })\n  );\n};\n\nexport const useLastDatalog = () => {\n  const cid = ref(null);\n  const updateTime = ref(null);\n  const data = ref(null);\n\n  const store = useStore();\n  const { isReady, getInstance } = useRobonomics();\n  const { controller } = useSetup();\n\n  (async () => {\n    if (isReady.value && controller.value) {\n      const robonomics = getInstance();\n      const datalog = await getLastDatalog(robonomics, controller.value);\n      cid.value = datalog.cid;\n      updateTime.value = datalog.timestamp;\n      try {\n        data.value = await readFileDecrypt(\n          cid.value,\n          controller.value,\n          robonomics.accountManager.encryptor(),\n          store\n        );\n      } catch (error) {\n        console.log(error);\n        notify(store, error.message);\n      }\n    }\n  })();\n\n  return { cid, updateTime, data };\n};\n\nexport const useConfig = () => {\n  const config = ref(null);\n  const cid = ref(\"\");\n\n  const store = useStore();\n  const { isReady, getInstance, accountManager } = useRobonomics();\n  const { controller } = useSetup();\n\n  const getConfig = async (controller) => {\n    const endpoint =\n      localStorage.getItem(\"rpc-parachain\") || configApp.default_rpc_endpoint;\n    const lsKey = `haconfig:${endpoint}:${controller}`;\n\n    if (!isReady.value) {\n      const data = localStorage.getItem(lsKey);\n      if (data) {\n        try {\n          const parsedData = JSON.parse(data);\n          console.log(\"getConfig cache\");\n          return { data: parsedData.value, cache: true };\n        } catch (error) {\n          console.log(\"haconfig bad\", error);\n        }\n      } else {\n        return { data: null, cache: true };\n      }\n    } else {\n      const robonomics = getInstance();\n\n      const datalog = await getLastDatalog(robonomics, controller);\n      cid.value = datalog.cid;\n      const result = await readFileDecrypt(\n        datalog.cid,\n        controller,\n        accountManager.encryptor(),\n        store\n      );\n\n      if (result) {\n        const twin_id = result.twin_id;\n        notify(store, `Twin id #${twin_id}`);\n\n        notify(store, `Start load config`);\n        const cid = await getConfigCid(robonomics, controller, twin_id);\n        if (!cid) {\n          console.log(\"Config not found\");\n          console.log(\"controller\", controller);\n          console.log(\"twin_id\", twin_id);\n        }\n\n        const config = await readFileDecrypt(\n          cid,\n          controller,\n          accountManager.encryptor(),\n          store\n        );\n\n        localStorage.setItem(\n          lsKey,\n          JSON.stringify({ time: Date.now(), value: config })\n        );\n        console.log(\"getConfig chain\");\n\n        return { data: config, cache: false };\n      }\n    }\n    return { data: null, cache: false };\n  };\n\n  const load = async () => {\n    notify(store, \"Find twin id\");\n\n    if (\n      !controller.value ||\n      !accountManager.account ||\n      accountManager.account.type !== \"ed25519\"\n    ) {\n      notify(store, \"Error\");\n      return;\n    }\n\n    let result;\n    try {\n      result = await getConfig(controller.value);\n    } catch (error) {\n      console.log(error);\n      notify(store, \"Error: \" + error.message);\n      return;\n    }\n\n    config.value = result.data;\n    if (result.cache) {\n      const stop = watch(\n        isReady,\n        async () => {\n          if (isReady.value) {\n            try {\n              const result = await getConfig(controller.value);\n              config.value = result.data;\n              stop();\n            } catch (error) {\n              console.log(error);\n              notify(store, \"Error: \" + error.message);\n            }\n          }\n        },\n        { immediate: true }\n      );\n    }\n\n    if (config.value !== null) {\n      notify(store, `Config loaded`);\n    }\n  };\n\n  return { config, cid, load };\n};\n","import { useDevices } from \"@/hooks/useDevices\";\nimport { useIpfs } from \"@/hooks/useIpfs\";\nimport { useRobonomics } from \"@/hooks/useRobonomics\";\nimport { useSend } from \"@/hooks/useSend\";\nimport { getLastDatalog } from \"@/utils/telemetry\";\nimport { stringToU8a, u8aToHex } from \"@polkadot/util\";\nimport { decodeAddress } from \"@polkadot/util-crypto\";\nimport { onUnmounted, ref, watch } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { notify, readFileDecrypt, setStatusLaunch, useSetup } from \"./common\";\n\nexport const useData = () => {\n  const cid = ref(null);\n  const updateTime = ref(null);\n  const data = ref(null);\n\n  const store = useStore();\n  const ipfs = useIpfs();\n  const { isReady, getInstance, accountManager } = useRobonomics();\n  const transaction = useSend();\n  const devices = useDevices();\n  const { controller, owner } = useSetup();\n\n  watch(\n    () => store.state.robonomicsUIvue.rws.active,\n    () => {\n      devices.owner.value = store.state.robonomicsUIvue.rws.active;\n    },\n    { immediate: true }\n  );\n\n  let unsubscribeDatalog;\n  const watchDatalog = async () => {\n    if (!isReady.value) {\n      return;\n    }\n    unsubscribeDatalog = await getInstance().datalog.on(\n      { method: \"NewRecord\" },\n      (results) => {\n        const r = results.filter((item) => {\n          return (\n            item.success &&\n            controller.value &&\n            item.data[0].toHuman() === controller.value\n          );\n        });\n        for (const item of r) {\n          updateTime.value = item.data[1].toNumber();\n          cid.value = item.data[2].toHuman();\n        }\n      }\n    );\n  };\n\n  watch(cid, async () => {\n    try {\n      data.value = await readFileDecrypt(\n        cid.value,\n        controller.value,\n        accountManager.encryptor(),\n        store\n      );\n    } catch (error) {\n      console.log(error);\n      notify(store, error.message);\n    }\n  });\n\n  const run = async () => {\n    if (controller.value) {\n      if (isReady.value) {\n        const datalog = await getLastDatalog(getInstance(), controller.value);\n        cid.value = datalog.cid;\n        updateTime.value = datalog.timestamp;\n        watchDatalog();\n      } else {\n        const stop = watch(isReady, (isReady) => {\n          if (isReady) {\n            run();\n            stop();\n          }\n        });\n      }\n    }\n  };\n\n  const stop = () => {\n    if (unsubscribeDatalog) {\n      unsubscribeDatalog();\n    }\n  };\n\n  onUnmounted(() => {\n    console.log(\"unmount launch\");\n    stop();\n  });\n\n  const launch = async (command) => {\n    console.log(command.launch.params.entity_id, command.tx.tx_status);\n    if (command.tx.tx_status !== \"pending\") {\n      return;\n    }\n\n    notify(store, `Launch command`);\n    console.log(`command ${JSON.stringify(command)}`);\n\n    if (!devices.devices.value.includes(accountManager.account.address)) {\n      notify(store, `Error: You do not have access to device management.`);\n      setStatusLaunch(store, command, \"error\");\n      return;\n    }\n\n    if (!ipfs.isAuth()) {\n      notify(store, `Authorization on ipfs node`);\n      try {\n        const signature = (\n          await accountManager.account.signMsg(\n            stringToU8a(accountManager.account.address)\n          )\n        ).toString();\n        ipfs.auth(owner.value, accountManager.account.address, signature);\n      } catch (error) {\n        if (error.message === \"Cancelled\") {\n          setStatusLaunch(store, command, \"declined\");\n        } else {\n          console.log(error);\n          setStatusLaunch(store, command, \"error\");\n        }\n        return;\n      }\n      setStatusLaunch(store, command, \"approved\");\n    }\n\n    const encryptor = accountManager.encryptor();\n    const controllerPublicKey = decodeAddress(controller.value);\n\n    let commandCid;\n    try {\n      const cmdString = JSON.stringify(command.launch);\n      const cmdCrypto = encryptor.encryptMessage(\n        cmdString,\n        controllerPublicKey\n      );\n      commandCid = await ipfs.add(u8aToHex(cmdCrypto));\n    } catch (error) {\n      setStatusLaunch(store, command, \"error\");\n      notify(store, `Error: ${error.message}`);\n      return;\n    }\n    console.log(`launch ipfs file ${commandCid.path}`);\n\n    if (!isReady.value) {\n      notify(store, `Error: Robonomics is not ready.`);\n      setStatusLaunch(store, command, \"error\");\n      return;\n    }\n\n    notify(store, `Send launch`);\n    const call = getInstance().launch.send(controller.value, commandCid.path);\n    const tx = transaction.createTx();\n    await transaction.send(tx, call, owner.value);\n    if (tx.error.value) {\n      if (tx.error.value !== \"Cancelled\") {\n        setStatusLaunch(store, command, \"error\");\n        notify(store, `Error: ${tx.error.value}`);\n      } else {\n        setStatusLaunch(store, command, \"declined\");\n        notify(store, \"Calcel\");\n      }\n    } else {\n      console.log(command);\n      setStatusLaunch(store, command, \"success\");\n      notify(store, \"Launch sended\");\n    }\n  };\n\n  return { cid, updateTime, data, run, stop, launch };\n};\n","import { render } from \"./Launch.vue?vue&type=template&id=40422d9c\"\nimport script from \"./Launch.vue?vue&type=script&lang=js\"\nexport * from \"./Launch.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <robo-smarthome-dashboard\n    :config=\"config\"\n    :datalog=\"data\"\n    :cid=\"cid\"\n    :updateTime=\"updateTime\"\n  />\n</template>\n\n<script>\nimport { watch } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { useData } from \"./libp2p\";\n\nexport default {\n  props: {\n    isKey: {\n      default: false,\n      type: Boolean\n    },\n    config: {\n      default: null,\n      type: Object\n    },\n    cid: {\n      type: String\n    }\n  },\n  emits: [\"connected\", \"error\"],\n  setup(props, { emit }) {\n    const { data, updateTime, run, launch } = useData();\n    const store = useStore();\n\n    const isOnce = props.isKey && props.config !== null;\n    const stop = watch(\n      () => [props.isKey, props.config],\n      ([isKey, config]) => {\n        if (isKey && config !== null) {\n          if (!isOnce && typeof stop === \"function\") {\n            stop();\n          }\n          if (config.peer_id) {\n            (async () => {\n              const result = await run(\n                config.peer_id,\n                config.libp2p_multiaddress\n              );\n              if (result) {\n                emit(\"connected\", result);\n              } else {\n                emit(\"error\", new Error(\"connect\"));\n              }\n            })();\n          } else {\n            emit(\"error\", new Error(\"not found peer_id\"));\n          }\n        }\n      },\n      { immediate: true, once: isOnce }\n    );\n\n    watch(\n      () => store.state.robonomicsUIvue.rws.launch,\n      (value) => {\n        try {\n          launch(JSON.parse(value));\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    );\n\n    return { data, updateTime };\n  }\n};\n</script>\n","import { pipe } from \"it-pipe\";\nimport { fromString as uint8ArrayFromString } from \"uint8arrays/from-string\";\nimport { toString as uint8ArrayToString } from \"uint8arrays/to-string\";\n\nexport function createHa() {\n  return (components) => {\n    async function getRequest(stream) {\n      return pipe(stream, async function (source) {\n        let result = \"\";\n        for await (const data of source) {\n          result += uint8ArrayToString(data.subarray());\n        }\n        return JSON.parse(result);\n      });\n    }\n\n    async function sendResponse(stream, msg) {\n      return pipe(\n        [uint8ArrayFromString(JSON.stringify(msg))],\n        stream.sink\n      ).finally(() => {\n        stream.close();\n      });\n    }\n\n    return {\n      async handle(\n        protocol,\n        handler,\n        options = {\n          runOnTransientConnection: true\n        }\n      ) {\n        await components.registrar.handle(\n          protocol,\n          async ({ stream }) => {\n            handler(await getRequest(stream), stream);\n          },\n          options\n        );\n      },\n      async request(\n        connection,\n        protocol,\n        data,\n        options = {\n          runOnTransientConnection: true\n        }\n      ) {\n        if (connection.status !== \"open\") {\n          return;\n        }\n        const stream = await connection.newStream([protocol], options);\n        return pipe(\n          [uint8ArrayFromString(JSON.stringify(data))],\n          stream,\n          async function (source) {\n            let result = \"\";\n            for await (const data of source) {\n              result += uint8ArrayToString(data.subarray());\n            }\n            try {\n              // stream.close();\n              return JSON.parse(result);\n            } catch (error) {\n              return result;\n            }\n          }\n        );\n      },\n      utils: {\n        getRequest,\n        sendResponse\n      }\n    };\n  };\n}\n","import { noise } from \"@chainsafe/libp2p-noise\";\nimport { circuitRelayTransport } from \"@libp2p/circuit-relay-v2\";\nimport { identify } from \"@libp2p/identify\";\n// import { keychain } from \"@libp2p/keychain\";\n// import { defaultLogger } from \"@libp2p/logger\";\nimport { mplex } from \"@libp2p/mplex\";\n// import { webRTC } from \"@libp2p/webrtc\";\nimport { webSockets } from \"@libp2p/websockets\";\nimport * as filters from \"@libp2p/websockets/filters\";\nimport { multiaddr } from \"@multiformats/multiaddr\";\n// import { LevelDatastore } from \"datastore-level\";\n// import { Key } from \"interface-datastore\";\nimport { createLibp2p } from \"libp2p\";\nimport { createHa } from \"./ha\";\n\nexport async function createNode() {\n  // const selfKey = new Key(\"/pkcs8/self\");\n  // const datastore = new LevelDatastore(`libp2p/data`);\n  // const chain = keychain()({\n  //   datastore: datastore,\n  //   logger: defaultLogger()\n  // });\n  // let peerId;\n  // if (await datastore.has(selfKey)) {\n  //   peerId = await chain.exportPeerId(\"self\");\n  // }\n  const node = await createLibp2p({\n    // peerId: peerId,\n    // addresses: {\n    //   listen: [\"/webrtc\"]\n    // },\n    transports: [\n      webSockets({\n        filter: filters.all\n      }),\n      // webRTC(),\n      circuitRelayTransport()\n    ],\n    streamMuxers: [mplex()],\n    connectionEncryption: [noise()],\n    services: {\n      identify: identify(),\n      ha: createHa()\n    },\n    connectionGater: {\n      denyDialMultiaddr: () => {\n        return false;\n      }\n    },\n    connectionManager: {\n      minConnections: 0\n    }\n  });\n  // if (chain != null && !(await datastore.has(selfKey))) {\n  //   await chain.importPeer(\"self\", node.peerId);\n  // }\n  return node;\n}\nexport function defaultRelay(peer_id) {\n  return multiaddr(\n    `/dns4/libp2p-relay-1.robonomics.network/tcp/443/wss/p2p/12D3KooWEMFXXvpZUjAuj1eKR11HuzZTCQ5HmYG9MNPtsnqPSERD/p2p-circuit/p2p/${peer_id}`\n  );\n}\nexport async function connectMultiaddress(peer_id, peer_multiaddress) {\n  if (peer_multiaddress.length > 0) {\n    const localMultiaddrs = [];\n    const circuit = [];\n    for (const peer_multiaddr of peer_multiaddress) {\n      const localMultiaddr = multiaddr(peer_multiaddr);\n      const protos = localMultiaddr.protoNames();\n      if (protos.includes(\"ws\") || protos.includes(\"wss\")) {\n        if (protos.includes(\"p2p-circuit\")) {\n          circuit.push(localMultiaddr);\n        } else if (\n          window.location.protocol !== \"https:\" ||\n          protos.includes(\"wss\")\n        ) {\n          localMultiaddrs.push(localMultiaddr);\n        }\n      }\n    }\n\n    if (localMultiaddrs.length > 0) {\n      for (const addr of localMultiaddrs) {\n        try {\n          await connect(addr);\n          return addr;\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    }\n\n    if (circuit.length > 0) {\n      for (const addr of circuit) {\n        try {\n          await connect(addr);\n          return addr;\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    }\n  }\n  try {\n    const addr = defaultRelay(peer_id);\n    await connect(addr);\n    return addr;\n  } catch (error) {\n    console.log(error);\n  }\n  return false;\n}\n\nlet node = null;\nlet connections = [];\nlet connection = null;\n\nexport async function start() {\n  if (node) {\n    return node;\n  }\n  node = await createNode();\n  await node.start();\n  console.log(`Node started with id ${node.peerId.toString()}`);\n\n  function updateConnectionsList() {\n    connections = node.getConnections().map((item) => {\n      return item.remoteAddr.toString();\n    });\n    console.log(\"Update Connections List\", connections);\n  }\n\n  node.addEventListener(\"connection:open\", (event) => {\n    console.log(\"connected\", event.detail.remoteAddr.toString());\n    updateConnectionsList();\n  });\n\n  node.addEventListener(\"connection:close\", (event) => {\n    console.log(\"disconected\", event.detail.remoteAddr.toString());\n    updateConnectionsList();\n    setTimeout(() => {\n      if (\n        connection &&\n        event.detail.remoteAddr.toString() === connection.remoteAddr.toString()\n      ) {\n        console.log(\"reconnect\");\n        reconnect(connection.remoteAddr.toString());\n      }\n    }, 10000);\n  });\n\n  return node;\n}\n\nexport async function reconnect(addr) {\n  try {\n    await connect(addr);\n  } catch (error) {\n    console.log(error);\n    // setTimeout(async () => {\n    //   if (addr && !connections.includes(addr)) {\n    //     await reconnect(addr);\n    //   }\n    // }, 3000);\n  }\n}\nexport async function connect(addr) {\n  console.log(\"connect to\", addr.toString());\n  if (!connections.includes(addr)) {\n    const listenerMultiaddr = multiaddr(addr);\n    connection = await node.dial(listenerMultiaddr);\n  }\n  return addr;\n}\n\nexport async function disconnect() {\n  if (connection) {\n    await connection.close();\n  }\n  connection = null;\n}\n\nexport function request(data, protocol = \"/call\") {\n  if (node && connection) {\n    return node.services.ha.request(connection, protocol, data);\n  }\n  throw new Error(\"error\");\n}\n","import { useDevices } from \"@/hooks/useDevices\";\nimport { useRobonomics } from \"@/hooks/useRobonomics\";\nimport {\n  connectMultiaddress,\n  disconnect,\n  request,\n  start\n} from \"@/utils/libp2p/libp2p\";\nimport { u8aToHex } from \"@polkadot/util\";\nimport { decodeAddress } from \"@polkadot/util-crypto\";\nimport { onUnmounted, ref, watch } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { decryptData, notify, setStatusLaunch, useSetup } from \"./common\";\n\nexport const useData = () => {\n  const data = ref(null);\n  const updateTime = ref(null);\n\n  const store = useStore();\n  const { accountManager } = useRobonomics();\n  const devices = useDevices();\n  const { controller } = useSetup();\n\n  watch(\n    () => store.state.robonomicsUIvue.rws.active,\n    () => {\n      devices.owner.value = store.state.robonomicsUIvue.rws.active;\n    },\n    { immediate: true }\n  );\n\n  onUnmounted(() => {\n    disconnect();\n  });\n\n  const run = async (peer_id, peer_multiaddress) => {\n    const node = await start();\n    try {\n      notify(store, `Connect to peer id ${peer_id}`);\n      const connected = await connectMultiaddress(peer_id, peer_multiaddress);\n      if (connected) {\n        notify(store, `Connected`);\n        const protocols = node.getProtocols();\n        if (protocols.includes(\"/update\")) {\n          await node.unhandle(\"/update\");\n        }\n        node.services.ha.handle(\"/update\", async (dataRaw, stream) => {\n          const result = await decryptData(\n            dataRaw.data,\n            controller.value,\n            accountManager.encryptor()\n          );\n          if (result) {\n            data.value = result;\n            updateTime.value = Date.now();\n            await node.services.ha.utils.sendResponse(stream, {\n              result: true\n            });\n          } else {\n            notify(store, `Error: decryptMsg`);\n          }\n        });\n        return connected;\n      }\n    } catch (error) {\n      notify(store, `Error: ${error.message}`);\n      console.log(error);\n    }\n    return false;\n  };\n\n  const launch = async (command) => {\n    console.log(command.launch.params.entity_id, command.tx.tx_status);\n    if (command.tx.tx_status !== \"pending\") {\n      return;\n    }\n\n    notify(store, `Launch command`);\n\n    if (!devices.devices.value.includes(accountManager.account.address)) {\n      notify(store, `Error: You do not have access to device management.`);\n      setStatusLaunch(store, command, \"error\");\n      return;\n    }\n\n    try {\n      const encryptor = accountManager.encryptor();\n      const controllerPublicKey = decodeAddress(controller.value);\n      const cmdString = JSON.stringify(command.launch);\n      const cmdCrypto = encryptor.encryptMessage(\n        cmdString,\n        controllerPublicKey\n      );\n      const response = await request({\n        data: {\n          sender: accountManager.account.address,\n          data: u8aToHex(cmdCrypto)\n        }\n      });\n      console.log(`response:`, response);\n\n      setStatusLaunch(store, command, \"success\");\n    } catch (error) {\n      console.log(error);\n      notify(store, `Error: Check status of the HomeAssistant.`);\n      setStatusLaunch(store, command, \"error\");\n    }\n  };\n\n  return { data, updateTime, run, launch };\n};\n","import { render } from \"./Libp2p.vue?vue&type=template&id=0b830996\"\nimport script from \"./Libp2p.vue?vue&type=script&lang=js\"\nexport * from \"./Libp2p.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./Telemetry.vue?vue&type=template&id=41178396\"\nimport script from \"./Telemetry.vue?vue&type=script&lang=js\"\nexport * from \"./Telemetry.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createRouter, createWebHashHistory } from \"vue-router\";\nimport Altruist from \"./views/hardware/Altruist.vue\";\nimport Hikikomori from \"./views/hardware/Hikikomori.vue\";\nimport Riscv from \"./views/hardware/Riscv.vue\";\nimport SeasonPass2 from \"./views/hardware/Season-pass-2.vue\";\nimport SeasonPass from \"./views/hardware/Season-pass.vue\";\nimport Home from \"./views/Home.vue\";\nimport Humanoid from \"./views/humanoid/RobonomicsApp.vue\";\nimport PathNotFound from \"./views/PathNotFound.vue\";\nimport RwsActivate from \"./views/RwsActivate.vue\";\nimport RwsSetup from \"./views/RwsSetup.vue\";\nimport RwsSetupNew from \"./views/RwsSetupNew.vue\";\n// import Services from \"./views/Services.vue\";\nimport EnergyMonitor from \"./views/hardware/Energy-monitor.vue\";\nimport SaveSetup from \"./views/saveSetup/Page.vue\";\nimport Telemetry from \"./views/telemetry/Telemetry.vue\";\n\nconst routes = [\n  {\n    path: \"/\",\n    name: \"Home\",\n    component: Home,\n    meta: {\n      title: \"Dashboard\"\n    }\n  },\n  {\n    path: \"/rws-buy\",\n    name: \"rwsActivate\",\n    component: RwsActivate,\n    meta: {\n      title: \"Buy a Subscription\"\n    }\n  },\n  {\n    path: \"/rws-setup\",\n    name: \"rwsSetup\",\n    component: RwsSetup,\n    meta: {\n      title: \"Setup a Subscription\"\n    }\n  },\n  {\n    path: \"/rws-setup-new\",\n    name: \"rwsSetupNew\",\n    component: RwsSetupNew,\n    meta: {\n      title: \"New Subscription setup\"\n    }\n  },\n  {\n    path: \"/telemetry\",\n    name: \"telemetry\",\n    component: Telemetry,\n    meta: {\n      title: \"Devices control panel\"\n    }\n  },\n  // {\n  //   path: \"/services\",\n  //   name: \"services\",\n  //   component: Services,\n  //   meta: {\n  //     title: \"Services\"\n  //   }\n  // },\n  {\n    path: \"/hardware/altruist\",\n    name: \"Altruist\",\n    component: Altruist,\n    meta: {\n      title: \"Altruist\"\n    }\n  },\n  {\n    path: \"/hardware/riscv\",\n    name: \"Riscv\",\n    component: Riscv,\n    meta: {\n      title: \"Riscv\"\n    }\n  },\n  {\n    path: \"/hardware/hikikomori\",\n    name: \"Hikikomori\",\n    component: Hikikomori,\n    meta: {\n      title: \"Hikikomori\"\n    }\n  },\n  {\n    path: \"/hardware/season-pass\",\n    name: \"SeasonPass\",\n    component: SeasonPass,\n    meta: {\n      title: \"Season Pass\"\n    }\n  },\n  {\n    path: \"/hardware/season-pass-2\",\n    name: \"SeasonPass2\",\n    component: SeasonPass2,\n    meta: {\n      title: \"Season Pass 2\"\n    }\n  },\n  {\n    path: \"/hardware/energy-monitor\",\n    name: \"EnergyMonitor\",\n    component: EnergyMonitor,\n    meta: {\n      title: \"Energy Monitor\"\n    }\n  },\n  {\n    path: \"/humanoid\",\n    name: \"Humanoid\",\n    component: Humanoid,\n    meta: {\n      title: \"Pay the robot with cryptocurrency\"\n    }\n  },\n  {\n    path: \"/altruist/:address?\",\n    props: true,\n    name: \"AltruistPage\",\n    component: () => import(\"./views/altruist/Page.vue\"),\n    meta: {\n      title: \"Altruist\"\n    }\n  },\n  {\n    path: \"/energy-monitor/:address?\",\n    props: true,\n    name: \"EnergytMonitorPage\",\n    component: () => import(\"./views/energyMonitor/Page.vue\"),\n    meta: {\n      title: \"Energy\"\n    }\n  },\n  {\n    path: \"/dtwin\",\n    name: \"DTwinPage\",\n    component: () => import(\"./views/dtwin/Page.vue\"),\n    meta: {\n      title: \"Digital Twin\"\n    }\n  },\n  {\n    path: \"/save-setup\",\n    name: \"save-setup\",\n    component: SaveSetup,\n    meta: {\n      title: \"Savesetup\"\n    }\n  },\n  { path: \"/:pathMatch(.*)*\", component: PathNotFound }\n];\n\nconst router = createRouter({\n  history: createWebHashHistory(),\n  routes\n});\n\nexport default router;\n","import { createStore } from \"vuex\";\n\nconst store = createStore({\n  state: {\n    name: \"Vue\"\n  }\n});\n\nexport default store;\n","import { fromUnit } from \"./tools\";\nexport default {\n  install: (app) => {\n    app.config.globalProperties.$filters = {\n      balance(value, decimals, symbol) {\n        if (\n          typeof value === \"string\" ||\n          typeof value === \"number\" ||\n          typeof value === \"bigint\"\n        ) {\n          return `${fromUnit(value, decimals, 4)} ${symbol}`;\n        }\n        return \"\";\n      }\n    };\n  }\n};\n","import { Buffer } from \"buffer\";\nimport { robonomicsUI } from \"robonomics-ui-vue\";\nimport { createApp } from \"vue\";\nimport App from \"./App.vue\";\nimport ipfs from \"./plugins/ipfs\";\nimport robonomics from \"./plugins/robonomics\";\nimport web3 from \"./plugins/web3\";\nimport router from \"./router\";\nimport store from \"./store\";\nimport filters from \"./utils/filters\";\nimport { showVersion } from \"./utils/tools\";\n\nimport \"robonomics-ui-vue/style.css\";\n\nwindow.Buffer = Buffer;\n\nshowVersion();\n\nconst app = createApp(App);\n\napp\n  .use(router)\n  .use(store)\n  .use(filters)\n  .use(robonomics)\n  .use(web3)\n  .use(ipfs, {\n    api: { gateway: \"https://ipfs.url.today\" }\n  })\n  .use(robonomicsUI, { store })\n  .mount(\"#app\");\n","import { ref } from \"vue\";\nimport { useRobonomics } from \"./useRobonomics\";\nimport { useSubscription } from \"./useSubscription\";\n\nexport const useSend = () => {\n  const { isReady, getInstance, accountManager } = useRobonomics();\n  const { getFreeWeightCalc } = useSubscription();\n\n  const getCallWeight = async (tx, signer) => {\n    if (!signer) {\n      if (accountManager.account) {\n        signer = accountManager.account.address;\n      } else {\n        throw new Error(\"Signer required\");\n      }\n    }\n    if (tx.hasPaymentInfo) {\n      return (await tx.paymentInfo(signer)).weight.toNumber();\n    }\n    return 0;\n  };\n\n  const checkWeight = async (tx, owner) => {\n    const freeWeightCalc = await getFreeWeightCalc(owner);\n    if (freeWeightCalc < 0) {\n      throw new Error(`Not found ledger ${owner}`);\n    }\n    const callWeight = await getCallWeight(tx);\n    if (callWeight > freeWeightCalc) {\n      throw new Error(\n        `The origin account have no enough free weight to process these call. Call weight ${callWeight}, Free weight ${freeWeightCalc}`\n      );\n    }\n  };\n\n  const createTx = () => {\n    const result = ref(null);\n    const error = ref(null);\n    const process = ref(false);\n    return { error, process, result };\n  };\n\n  const send = async (tx, call, subscription = false) => {\n    tx.result.value = null;\n    tx.error.value = null;\n    tx.process.value = true;\n    if (!isReady.value) {\n      tx.error.value = \"Robonomics is not ready\";\n      tx.process.value = false;\n      return;\n    }\n    const robonomics = getInstance();\n    try {\n      if (subscription) {\n        await checkWeight(call, subscription);\n        robonomics.accountManager.useSubscription(subscription);\n      }\n      const nonce = await robonomics.api.rpc.system.accountNextIndex(\n        robonomics.accountManager.account.address\n      );\n      tx.result.value = await robonomics.accountManager.signAndSend(call, {\n        nonce\n      });\n      console.log(\"tx\", tx.result.value.block, tx.result.value.tx);\n    } catch (e) {\n      console.log(e);\n      tx.error.value = e.message;\n    }\n    tx.process.value = false;\n    if (subscription) {\n      robonomics.accountManager.useSubscription(false);\n    }\n    return tx.result;\n  };\n\n  return { createTx, send };\n};\n","import { ref } from \"vue\";\nimport { useRobonomics } from \"./useRobonomics\";\n\nexport const useAccount = () => {\n  const account = ref(null);\n  const { accountManager } = useRobonomics();\n  if (accountManager.account) {\n    account.value = accountManager.account.address;\n  }\n  const unsubscribe = accountManager.onChange((res) => {\n    account.value = res.address;\n  });\n  return { account, unsubscribe };\n};\n","import configApp from \"@/config\";\nimport { validateAddress } from \"@polkadot/util-crypto\";\nimport { onUnmounted, ref, watch } from \"vue\";\nimport { useRobonomics } from \"./useRobonomics\";\n\nexport const getDevices = async (robonomics, owner) => {\n  try {\n    const result = await robonomics.rws.getDevices(owner);\n    return result.map((item) => {\n      return item.toHuman();\n    });\n  } catch (error) {\n    console.log(error);\n    return [];\n  }\n};\n\nexport const useDevices = (initialOwner = null) => {\n  const { isReady, getInstance } = useRobonomics();\n  const owner = ref(initialOwner);\n  const devices = ref([]);\n\n  const getDevices = async (owner) => {\n    const endpoint =\n      localStorage.getItem(\"rpc-parachain\") || configApp.default_rpc_endpoint;\n    const lsKey = `hadevices:${endpoint}:${owner}`;\n\n    if (!isReady.value) {\n      const data = localStorage.getItem(lsKey);\n      if (data) {\n        try {\n          const parsedData = JSON.parse(data);\n          // console.log(\"getDevices cache\");\n          return { data: parsedData.value, cache: true };\n        } catch (error) {\n          console.log(\"hadevices bad\", error);\n        }\n      } else {\n        return { data: [], cache: true };\n      }\n    } else {\n      try {\n        const result = await getInstance().rws.getDevices(owner);\n        const list = result.map((item) => {\n          return item.toHuman();\n        });\n        localStorage.setItem(\n          lsKey,\n          JSON.stringify({ time: Date.now(), value: list })\n        );\n        // console.log(\"getDevices chain\");\n        return { data: list, cache: false };\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    return { data: [], cache: false };\n  };\n\n  const loadDevices = async () => {\n    if (owner.value) {\n      try {\n        validateAddress(owner.value);\n        const result = await getDevices(owner.value);\n        devices.value = result.data;\n        if (result.cache) {\n          const stop = watch(\n            isReady,\n            async () => {\n              if (isReady.value) {\n                const result = await getDevices(owner.value);\n                devices.value = result.data;\n                stop();\n              }\n            },\n            { immediate: true }\n          );\n        }\n        return;\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    devices.value = [];\n  };\n\n  watch(\n    owner,\n    async () => {\n      await loadDevices();\n    },\n    {\n      immediate: true\n    }\n  );\n\n  watch(\n    isReady,\n    async (isReady) => {\n      if (isReady) {\n        const unsubscribe = await getInstance().events.on(\n          { section: \"rws\", method: \"NewDevices\" },\n          async (result) => {\n            for (const event of result) {\n              if (event.data[0].toHuman() === owner.value) {\n                await loadDevices();\n              }\n            }\n          }\n        );\n        onUnmounted(unsubscribe);\n      }\n    },\n    { immediate: true }\n  );\n\n  return {\n    owner,\n    devices,\n    loadDevices\n  };\n};\n","<template>\n  <robo-select\n    v-if=\"twins !== undefined && twins.length > 0\"\n    :options=\"twins\"\n    :values=\"twins\"\n    v-model=\"twinId\"\n    size=\"small\"\n    label=\"Choose digital twin\"\n    block\n  />\n  <robo-status v-else-if=\"twins !== undefined && !isLoading\" type=\"warning\">\n    Digital twins do not exist\n  </robo-status>\n  <robo-text v-if=\"isLoading\" weight=\"normal-italic\" align=\"center\">\n    <robo-loader size=\"1.5\" /> Loading\n  </robo-text>\n</template>\n\n<script>\nimport { ref, watch } from \"vue\";\nimport { useTwins } from \"./dtwin\";\n\nexport default {\n  emits: [\"change\"],\n  setup(_, { emit }) {\n    const { twins, isLoading } = useTwins(true);\n    const twinId = ref();\n\n    watch(\n      twins,\n      (twins) => {\n        if (twinId.value === undefined && twins && twins.length > 0) {\n          twinId.value = twins[twins.length - 1];\n        }\n      },\n      { immediate: true }\n    );\n\n    watch(twinId, (twinId) => {\n      emit(\"change\", twinId);\n    });\n\n    return {\n      twins,\n      twinId,\n      isLoading\n    };\n  }\n};\n</script>\n","import { render } from \"./SelectTwin.vue?vue&type=template&id=41307847\"\nimport script from \"./SelectTwin.vue?vue&type=script&lang=js\"\nexport * from \"./SelectTwin.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { inject } from \"vue\";\n\nexport function useRobonomics() {\n  const provider = inject(\"RobonomicsProvider\");\n  return {\n    accountManager: provider.accountManager,\n    isReady: provider.isReady,\n    robonomics: provider.instance,\n    getInstance: () => provider.instance.value\n  };\n}\n","import configApp from \"@/config\";\nimport { useAccount } from \"@/hooks/useAccount\";\nimport { useDevices } from \"@/hooks/useDevices\";\nimport { useRobonomics } from \"@/hooks/useRobonomics\";\nimport { useSend } from \"@/hooks/useSend\";\nimport {\n  cidToHex,\n  hexToCid,\n  stringToHex\n} from \"robonomics-interface/dist/utils\";\nimport { ref, toRef, watch } from \"vue\";\n\n/**\n * Stores the list of digital twin IDs and the total count of digital twins for\n * the given account in the local storage. The storage key is based on the\n * current parachain endpoint and the account address.\n *\n * @param {string} account - The account address.\n * @param {number} total - The total number of digital twins.\n * @param {string[]} twins - The list of digital twin IDs.\n */\nconst setCache = (account, total, twins) => {\n  const endpoint =\n    localStorage.getItem(\"rpc-parachain\") || configApp.default_rpc_endpoint;\n  localStorage.setItem(\n    `twins:${new URL(endpoint).host}:${account}`,\n    JSON.stringify({ total, twins })\n  );\n};\n\n/**\n * Retrieves the cached digital twin data for a given account from local storage.\n * The storage key is based on the current parachain endpoint and the account address.\n *\n * @param {string} account - The account address.\n * @returns {Object} - An object containing the total number of digital twins and the list of twin IDs.\n *                     If no cache is found, returns an object with total set to false and twins as an empty array.\n */\nexport const getCache = (account) => {\n  const endpoint =\n    localStorage.getItem(\"rpc-parachain\") || configApp.default_rpc_endpoint;\n  try {\n    const result = JSON.parse(\n      localStorage.getItem(`twins:${new URL(endpoint).host}:${account}`)\n    );\n    if (result) {\n      return result;\n    }\n  } catch (e) {\n    console.log(e);\n  }\n  return { total: false, twins: [] };\n};\n\n/**\n * Queries the total number of digital twins in the parachain.\n *\n * @param {Robonomics} robonomics - The Robonomics API instance.\n * @returns {Promise<number>} - The total number of digital twins.\n */\nexport const getTotal = async (robonomics) => {\n  return await robonomics.twin.getTotal();\n};\n\n/**\n * Queries the digital twin IDs for a given account address, starting from a given index.\n * The function returns an object containing the total number of digital twins and the list of twin IDs.\n *\n * @param {Robonomics} robonomics - The Robonomics API instance.\n * @param {string} address - The account address.\n * @param {number} [startIndex=0] - The starting index for the query.\n * @returns {Promise<Object>} - An object containing the total number of digital twins and the list of twin IDs.\n */\nconst twinsByAccount = async (robonomics, address, startIndex = 0) => {\n  const twins = [];\n  const total = await getTotal(robonomics);\n  for (let id = startIndex; id < total; id++) {\n    const owner = await robonomics.twin.getOwner(id);\n    if (owner === address) {\n      twins.push(id);\n    }\n  }\n  return { total, twins };\n};\n\n/**\n * Queries the digital twin IDs for a given account address and stores them in local storage.\n *\n * @param {Robonomics} robonomics - The Robonomics API instance.\n * @param {string} address - The account address.\n * @returns {Promise<number[]>} - The list of digital twin IDs.\n */\nexport const loadTwins = async (robonomics, address) => {\n  const { total, twins } = await twinsByAccount(robonomics, address);\n  setCache(address, total, twins);\n  return twins;\n};\n\n/**\n * Converts a given token (hex-string) to a utf-8 encoded string.\n * @param {string} token - A token (hex-string).\n * @returns {string} The utf-8 encoded string.\n */\nexport const tokenToString = (token) => {\n  token = token.replace(/^0x/, \"\").replace(/^00+/, \"\");\n  if (token.length % 2 !== 0) {\n    token = \"0\" + token;\n  }\n  return Buffer.from(token, \"hex\").toString(\"utf8\");\n};\n\n/**\n * Converts a given token (hex-string) to a Content-Addressed Identifier (CID).\n * @param {string} token - A token (hex-string).\n * @returns {string} The Content-Addressed Identifier (CID).\n */\nexport const tokenToCid = (token) => {\n  return hexToCid(token);\n};\n\n/**\n * A hook that returns the digital twin data for a given digital twin ID.\n * The hook listens to changes of the given `id` ref and updates the `twin` ref\n * with the corresponding digital twin data.\n *\n * @param {Ref<number>} id - The digital twin ID.\n * @returns {Object} - An object containing a `twin` ref with the digital twin data.\n */\nexport function useTwin(id) {\n  const { getInstance } = useRobonomics();\n  const twin = ref();\n\n  watch(\n    id,\n    async (twinId) => {\n      if (twinId >= 0) {\n        const robonomics = getInstance();\n        twin.value = await robonomics.twin.getTwin(twinId);\n      }\n    },\n    { immediate: true }\n  );\n\n  return { twin };\n}\n\n/**\n * A hook that returns the list of digital twin IDs for a given account address.\n * The hook listens to changes of the given `account` ref and updates the `twins` ref\n * with the corresponding list of digital twin IDs. The `isLoading` ref indicates if the\n * data is being loaded.\n *\n * @param {boolean} [force=false] - If true, will immediately run the query.\n * @returns {Object} - An object containing a `twins` ref with the list of digital twin IDs,\n * a `isLoading` ref indicating if the data is being loaded, and a `run` function to run\n * the query.\n */\nexport function useTwins(force = false) {\n  const { isReady, getInstance } = useRobonomics();\n  const { account } = useAccount();\n  const twins = ref();\n  const isLoading = ref(false);\n\n  const load = async (account) => {\n    const robonomics = getInstance();\n    const result = getCache(account);\n    let startIndex = 0;\n    if (result.total !== false) {\n      const total = await getTotal(robonomics);\n      if (total === result.total) {\n        twins.value = result.twins;\n        return;\n      } else {\n        startIndex = result.total;\n      }\n    }\n    twins.value = await loadTwins(robonomics, account, startIndex);\n  };\n\n  const run = () => {\n    watch(\n      [account, isReady],\n      async ([account, isReady]) => {\n        if (account && isReady) {\n          isLoading.value = true;\n          await load(account);\n          isLoading.value = false;\n        }\n      },\n      { immediate: true }\n    );\n  };\n  if (force) {\n    run();\n  }\n\n  return {\n    twins,\n    isLoading,\n    run\n  };\n}\n\n/**\n * A hook that returns an object with two functions: `create` and `setSource`.\n * Both functions return a transaction hash after sending the transaction.\n *\n * @function create - Creates a new digital twin. The function takes no arguments.\n * @function setSource - Sets the source of a digital twin. The function takes three arguments:\n *   - `id`: The ID of the digital twin.\n *   - `topic`: The topic of the source. Can be a CID or a string.\n *   - `source`: The source of the digital twin.\n */\nexport function useTwinAction(subscribe) {\n  const { getInstance } = useRobonomics();\n  const transaction = useSend();\n  const { account } = useAccount();\n  if (!subscribe) {\n    subscribe = account;\n  } else {\n    subscribe = toRef(subscribe);\n  }\n  const devices = useDevices(subscribe);\n\n  const create = async () => {\n    const robonomics = getInstance();\n    const call = robonomics.twin.create();\n    const tx = transaction.createTx();\n    if (devices.devices.value.includes(account.value)) {\n      await transaction.send(tx, call, subscribe.value);\n    } else {\n      await transaction.send(tx, call);\n    }\n    return tx;\n  };\n\n  const setSource = async (id, topic, source) => {\n    const robonomics = getInstance();\n    let hex = topic;\n    if (!topic.startsWith(\"0x\")) {\n      try {\n        hex = cidToHex(topic);\n      } catch (_) {\n        hex = stringToHex(topic);\n      }\n    }\n    const call = robonomics.twin.setSource(id, hex, source);\n    const tx = transaction.createTx();\n    if (devices.devices.value.includes(account.value)) {\n      await transaction.send(tx, call, subscribe.value);\n    } else {\n      await transaction.send(tx, call);\n    }\n    return tx;\n  };\n\n  return { create, setSource };\n}\n","export default {\n  default_rpc_endpoint: \"wss://polkadot.rpc.robonomics.network/\",\n  nft_oracle_endpoint: \"https://nft-oracle.robonomics.network/\"\n};\n\n// SEPOLIA\nexport const address = {\n  xrt: \"0x9516AFb2b538CAbDcC04e2289E9d48eEBD8fa6ef\",\n  tokenVesting: \"0xf1ba89053f407DF832b135F19fDB064C7A97E1F3\",\n  nft: \"0x0c0C092f372c3Cb49D116A14fA7dcc40e84275aa\"\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? function(obj) { return Object.getPrototypeOf(obj); } : function(obj) { return obj.__proto__; };\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(function(key) { def[key] = function() { return value[key]; }; });\n\t}\n\tdef['default'] = function() { return value; };\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"js/\" + chunkId + \".\" + {\"345\":\"3c370ed3\",\"506\":\"6fcb5800\",\"730\":\"2e67d9ad\"}[chunkId] + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"css/\" + chunkId + \".\" + {\"345\":\"c892dec7\",\"506\":\"9d5660a1\",\"730\":\"355dac2f\"}[chunkId] + \".css\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var inProgress = {};\nvar dataWebpackPrefix = \"dapp-robonomics.network:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = function(url, done, key, chunkId) {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = function(prev, event) {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach(function(fn) { return fn(event); });\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"\";","if (typeof document === \"undefined\") return;\nvar createStylesheet = function(chunkId, fullhref, oldTag, resolve, reject) {\n\tvar linkTag = document.createElement(\"link\");\n\n\tlinkTag.rel = \"stylesheet\";\n\tlinkTag.type = \"text/css\";\n\tif (__webpack_require__.nc) {\n\t\tlinkTag.nonce = __webpack_require__.nc;\n\t}\n\tvar onLinkComplete = function(event) {\n\t\t// avoid mem leaks.\n\t\tlinkTag.onerror = linkTag.onload = null;\n\t\tif (event.type === 'load') {\n\t\t\tresolve();\n\t\t} else {\n\t\t\tvar errorType = event && event.type;\n\t\t\tvar realHref = event && event.target && event.target.href || fullhref;\n\t\t\tvar err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\n(\" + errorType + \": \" + realHref + \")\");\n\t\t\terr.name = \"ChunkLoadError\";\n\t\t\terr.code = \"CSS_CHUNK_LOAD_FAILED\";\n\t\t\terr.type = errorType;\n\t\t\terr.request = realHref;\n\t\t\tif (linkTag.parentNode) linkTag.parentNode.removeChild(linkTag)\n\t\t\treject(err);\n\t\t}\n\t}\n\tlinkTag.onerror = linkTag.onload = onLinkComplete;\n\tlinkTag.href = fullhref;\n\n\n\tif (oldTag) {\n\t\toldTag.parentNode.insertBefore(linkTag, oldTag.nextSibling);\n\t} else {\n\t\tdocument.head.appendChild(linkTag);\n\t}\n\treturn linkTag;\n};\nvar findStylesheet = function(href, fullhref) {\n\tvar existingLinkTags = document.getElementsByTagName(\"link\");\n\tfor(var i = 0; i < existingLinkTags.length; i++) {\n\t\tvar tag = existingLinkTags[i];\n\t\tvar dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");\n\t\tif(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return tag;\n\t}\n\tvar existingStyleTags = document.getElementsByTagName(\"style\");\n\tfor(var i = 0; i < existingStyleTags.length; i++) {\n\t\tvar tag = existingStyleTags[i];\n\t\tvar dataHref = tag.getAttribute(\"data-href\");\n\t\tif(dataHref === href || dataHref === fullhref) return tag;\n\t}\n};\nvar loadStylesheet = function(chunkId) {\n\treturn new Promise(function(resolve, reject) {\n\t\tvar href = __webpack_require__.miniCssF(chunkId);\n\t\tvar fullhref = __webpack_require__.p + href;\n\t\tif(findStylesheet(href, fullhref)) return resolve();\n\t\tcreateStylesheet(chunkId, fullhref, null, resolve, reject);\n\t});\n}\n// object to store loaded CSS chunks\nvar installedCssChunks = {\n\t524: 0\n};\n\n__webpack_require__.f.miniCss = function(chunkId, promises) {\n\tvar cssChunks = {\"345\":1,\"506\":1,\"730\":1};\n\tif(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\n\telse if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\n\t\tpromises.push(installedCssChunks[chunkId] = loadStylesheet(chunkId).then(function() {\n\t\t\tinstalledCssChunks[chunkId] = 0;\n\t\t}, function(e) {\n\t\t\tdelete installedCssChunks[chunkId];\n\t\t\tthrow e;\n\t\t}));\n\t}\n};\n\n// no hmr\n\n// no prefetching\n\n// no preloaded","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n__webpack_require__.f.j = function(chunkId, promises) {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise(function(resolve, reject) { installedChunkData = installedChunks[chunkId] = [resolve, reject]; });\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = function(event) {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkdapp_robonomics_network\"] = self[\"webpackChunkdapp_robonomics_network\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(10937); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_createBlock","_component_robo_button","onClick","$setup","create","block","disabled","isProccess","loading","type","isSuccess","default","_withCtx","_cache","_createTextVNode","_","props","emits","setup","emit","useTwinAction","owner","ref","async","value","tx","error","console","log","__exports__","render","getRegistry","registry","TypeRegistry","types","PalletRobonomicsRwsSubscription","_enum","Lifetime","tps","Daily","days","PalletRobonomicsRwsSubscriptionLedger","freeWeight","issueTime","lastUpdate","kind","register","DAYS_TO_MS","getLedger","robonomics","res","rws","isEmpty","getValidUntil","ledger","isLifetime","issue_time","toNumber","isDaily","useSubscription","initialOwner","dataRaw","shallowRef","isReady","getInstance","useRobonomics","devices","loadDevices","useDevices","getReferenceCallWeight","api","consts","referenceCallWeight","endpoint","localStorage","getItem","configApp","default_rpc_endpoint","lsKey","setItem","JSON","stringify","time","Date","now","toJSON","data","cache","undefined","parsedData","parse","createType","getFreeWeightCalc","utps","duration_ms","delta","Math","floor","validUntil","computed","countMonth","isActive","hasSubscription","loadLedger","validateAddress","result","stop","watch","immediate","_component_main_layout","pagetitle","title","_createVNode","_component_router_view","class","$data","renderComponent","_component_robo_layout_header","key","logoIcon","$props","nav","_component_robo_section","_createElementVNode","_hoisted_1","_component_router_link","to","_ctx","$store","state","robonomicsUIvue","links","activate","exact","setupnew","list","length","_createElementBlock","_Fragment","_createCommentVNode","toDecimal","v","Decimal","toString","round","place","todp","fromUnit","decimals","dp","div","pow","showVersion","process","VUE_APP_GIT_BRANCH","VUE_APP_GIT_TAG","VUE_APP_GIT_SHA","toExpNeg","toExpPos","String","inject","toRaw","this","RobonomicsProvider","instance","signer","signRaw","polkadot","address","handlerAccount","handler","extensionObj","newValue","oldValue","$route","$nextTick","methods","unsubscribeBalance","accounts","account","find","item","name","accountManager","setSender","extension","getBalance","r","transferable","free","sub","frozen","commit","chainDecimals","e","store","useStore","network","connection","navigation","link","repoversion","onMounted","response","fetch","json","__props","subscription","active","components","MainLayout","router","useRouter","route","useRoute","resolve","path","meta","resulttitle","document","querySelector","setAttribute","IpfsApiClient","constructor","authHeader","_create","client","_options","options","url","headers","authorization","isAuth","auth","signature","authHeaderRaw","Buffer","from","authClear","ls","cid","files","file","push","cat","decoder","TextDecoder","content","chunk","decode","stream","add","install","app","params","provide","gateway","naclOpen","sealed","nonce","senderBoxPublic","receiverBoxSecret","nacl","open","naclSeal","message","senderBoxSecret","receiverBoxPublic","randomAsU8a","convertSecretKeyToCurve25519","secretKey","ed2curve","convertPublicKeyToCurve25519","publicKey","decryptMessage","encryptedMessageWithNonce","senderPublicKey","messageU8a","u8aToU8a","slice","encryptMessage","recipientPublicKey","nonceIn","u8aConcat","createPair","mnemonic","seed","mnemonicToMiniSecret","pair","ed25519PairFromSeed","encryptor","encodeAddress","ss58Format","AccountManagerDapp","AccountManager","keyring","config","loadAll","setReady","super","beforeSetSender","getPair","loadInjected","afterSetSender","isInjected","setSigner","signMsg","u8aToHex","u8aWrapBytes","addUri","suri","addFromUri","addUriPassword","password","addJsonPassword","createFromJson","addPair","pairKey","addFromPair","toJson","decoded","decodePair","base64Decode","encoded","encoding","urlParams","URLSearchParams","window","location","search","get","Robonomics","createInstance","setAccountManager","CodeError","PROVIDER","NETWORK","ACCOUNT","Web3Error","Error","code","Connector","getProvider","getAccount","getNetworkId","Extension","provider","update","networkId","handleChainChanged","Number","on","handleAccountsChanged","request","method","Provider","networks","connector","reactive","setConnector","ethers","getSigner","includes","setProvider","warn","getBlock","blockNumber","$web3","web3","_toDisplayString","balance","_renderList","tokens","token","_component_nft_token","tokenId","onActivate","loadTokens","src","image","style","activated","_hoisted_2","_component_btn_send","wait","_component_free_minimum","args","send","status","STATUS","PRE_PROCESS","WAIT_TX","_renderSlot","$slots","ERROR","READY","_hoisted_3","NEW","last","receipt","hash","errorCatch","received","requestFreeMinimum","avaible","_hoisted_4","_hoisted_5","_hoisted_6","axios","baseURL","nft_oracle_endpoint","checkAvailible","accountEthereum","post","nft","getFreeMinimum","accauntParachain","msg","for","signMessage","check","timerId","setInterval","clearInterval","BtnSend","FreeMinimum","nftContract","nft_abi","connect","interface","parseError","NftToken","balanceOf","ids","index","tokenOfOwnerByIndex","uri","tokenURI","ipfsHash","split","pop","activatedOf","providers","event","detail","ethereum","activeProviderRdns","findIndex","info","rdns","activeAccount","addEventListener","dispatchEvent","CustomEvent","chains","workingchain","mipdstore","createStore","getProviders","subscribe","i","isConnected","_state","contract","providerethers","curentslide","setslide","s","getEthersProviderObj","getNFT","blockupdate","perms","eth_accounts","some","parentCapability","chain","parseInt","then","parseFloat","catch","activateToken","current","_component_robo_layout_section","width","_component_robo_grid","minColumnWidth","gap","card","rwsactive","_component_robo_rws_setup_active","show","_component_robo_text","align","offset","size","weight","columns","_component_robo_grid_item","borderbottom","price","_component_robo_details","summary","_component_robo_icon","icon","_component_robo_link","href","freeAuctions","linkActivate","unsubscribeBlock","getAuctionQueue","events","onBlock","minimalBid","getMinimalBid","bnToBn","onUnmounted","priceFormat","_component_robo_select","values","commands","map","modelValue","parameter","$event","proccess","highlight","robot","listOfCommands","unsubscribe","txs","balances","transfer","launch","utility","batch","resultTx","signAndSend","txIndex","created","_component_robo_template_rws_buy","activationtime","available","chainInfoUploaded","chainInfoStatus","rwsExpiration","expiredate","onOnActivate","useBalance","unsubscribeAccount","useAccount","transaction","useSend","setStatus","lt","call","bid","getFirtsFreeAuction","setDevices","createTx","stopWatchEffect","watchEffect","centered","_component_robo_tabs","_component_robo_tab","label","_component_robo_rws_setup","onUserDelete","removeUser","onUserAdd","addUser","onSaveHapass","saveHapass","onControllerEdit","editController","_component_robo_rws_setups_list","setupOwner","setUser","user","skipDuplicateCheck","filter","addr","passToSave","userAddress","userType","acctype","encodedDevices","passwordForAdmin","decodeAddress","controller","passwordForRecovery","datalog","write","ha","admin","accountOld","onRequestSubscription","onSetupGenerate","getDevices","nextTick","script","_component_robo_input","_component_account_unlock","onUnlock","isUnlock","_component_d_twin","updateKey","onTwinId","twinId","onFind","finedFiles","finedFile","_component_ipfs_file","hex","_component_encrypt_message","onEncrypt","messageHash","_component_ipfs_upload","onUpload","ipfsFile","_component_crust_store","onStore","isStored","_component_d_twin_save","onSave","_hoisted_7","unlock","reported_replica_count","$filters","canStored","storeFile","Crust","init","cb","intervalId","WsProvider","ApiPromise","typesBundle","typesBundleForPolkadot","cryptoWaitReady","query","system","feeFrozen","getStorePrice","file_size","fileBaseFee","market","fileByteFee","getInfo","ipfs_cid","filesV2","addRenewalPoolBalance","amount","addPrepaid","tips","placeStorageOrder","Promise","reject","isInBlock","forEach","section","phase","dispatchError","isModule","mod","asModule","docs","findMetaError","join","rpc","asInBlock","header","number","asApplyExtrinsic","toHuman","crust","_component_select_twin","onChange","keySelect","_component_create_twin","onCreate","SelectTwin","CreateTwin","keyRecords","twin","useTwin","save","setSource","encrypt","encryptedMessage","dataHex","target","hexToCid","omit","obj","omitted","rest","o","replicas","Object","keys","decrypt","decryptedMessage","u8aToString","getContentFile","startsWith","ipfsGateway","upload","ipfs","stringToU8a","AccountUnlock","EncryptMessage","DTwin","DTwinSave","IpfsUpload","IpfsFile","CrustStore","isSaved","_component_Libp2p","isKey","onConnected","handlerConnected","onError","handlerError","_component_Launch","_component_robo_smarthome_dashboard","updateTime","useIpfs","clearJson","string","replaceAll","parseJson","getLastIndex","id","getLastId","getLastDatalog","lastIndex","readByIndex","timestamp","getConfigCid","twin_id","getTwin","configHex","utils","watchIpfsGateway","activeGateway","catFile","decryptData","encryptedMsg","controllerPublicKey","hexToU8a","readFileDecrypt","loadSetup","setupRaw","useSetup","notify","text","timeout","dispatch","setStatusLaunch","command","tx_status","useConfig","getConfig","load","useData","unsubscribeDatalog","watchDatalog","results","success","run","entity_id","commandCid","cmdString","cmdCrypto","Boolean","dataTest","configTest","createHa","getRequest","pipe","source","uint8ArrayToString","subarray","sendResponse","uint8ArrayFromString","sink","finally","close","handle","protocol","runOnTransientConnection","registrar","newStream","createNode","node","createLibp2p","transports","webSockets","filters","circuitRelayTransport","streamMuxers","mplex","connectionEncryption","noise","services","identify","connectionGater","denyDialMultiaddr","connectionManager","minConnections","defaultRelay","peer_id","multiaddr","connectMultiaddress","peer_multiaddress","localMultiaddrs","circuit","peer_multiaddr","localMultiaddr","protos","protoNames","connections","start","updateConnectionsList","getConnections","remoteAddr","peerId","setTimeout","reconnect","listenerMultiaddr","dial","disconnect","connected","protocols","getProtocols","unhandle","sender","isOnce","libp2p_multiaddress","once","Libp2p","Launch","routes","component","Home","RwsActivate","RwsSetup","RwsSetupNew","Telemetry","Altruist","Riscv","Hikikomori","SeasonPass","SeasonPass2","EnergyMonitor","Humanoid","SaveSetup","PathNotFound","createRouter","history","createWebHashHistory","globalProperties","symbol","createApp","App","use","robonomicsUI","mount","getCallWeight","hasPaymentInfo","paymentInfo","checkWeight","freeWeightCalc","callWeight","accountNextIndex","twins","isLoading","_component_robo_status","_component_robo_loader","useTwins","setCache","total","URL","host","getCache","getTotal","twinsByAccount","startIndex","getOwner","loadTwins","tokenToString","replace","tokenToCid","force","toRef","topic","cidToHex","stringToHex","xrt","tokenVesting","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","m","amdO","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","splice","n","getter","__esModule","d","a","leafPrototypes","getProto","getPrototypeOf","__proto__","t","mode","ns","def","indexOf","getOwnPropertyNames","definition","defineProperty","enumerable","f","chunkId","all","reduce","promises","u","miniCssF","g","globalThis","Function","prop","prototype","hasOwnProperty","inProgress","dataWebpackPrefix","l","done","needAttach","scripts","getElementsByTagName","getAttribute","createElement","charset","nc","onScriptComplete","prev","onerror","onload","clearTimeout","doneFns","parentNode","removeChild","bind","head","appendChild","Symbol","toStringTag","nmd","paths","children","p","createStylesheet","fullhref","oldTag","linkTag","rel","onLinkComplete","errorType","realHref","err","insertBefore","nextSibling","findStylesheet","existingLinkTags","tag","dataHref","existingStyleTags","loadStylesheet","installedCssChunks","miniCss","cssChunks","installedChunks","installedChunkData","promise","loadingEnded","realSrc","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}